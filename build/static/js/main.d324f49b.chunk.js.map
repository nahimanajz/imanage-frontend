{"version":3,"sources":["helpers/userInfo.js","screens/HomePage.js","constants/UserConstants.js","serverRoutes/index.js","helpers/popups.js","helpers/SignupSchema.js","helpers/Loading.js","screens/RegisterPage.js","actions/UserActions.js","screens/LoginPage.js","constants/DebitConstants.js","components/Pagination.js","screens/DebitPage.js","actions/DebitActions.js","constants/ExpenseConstants.js","screens/ExpensePage.js","actions/ExpenseActions.js","constants/CreditConstants.js","components/CreditForm.js","actions/CreditActions.js","screens/CreditPage.js","components/Menu.js","screens/DepositPage.js","actions/DepositAction.js","App.js","reducers/ExpenseReducers.js","reducers/DebitReducer.js","reducers/CreditReducer.js","reducers/DepositReducer.js","store.js","reducers/UserReducer.js","index.js"],"names":["userInfo","JSON","parse","localStorage","getItem","headers","user_id","id","name","HomePage","className","xmlns","viewBox","fill","fill-opacity","d","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","URL_INDEX","openModal","document","querySelector","classList","add","closeModal","remove","toggleSidebar","toggle","togglePayModal","closePayModal","message","data","errors","error","forEach","toast","success","formatDate","date","moment","format","payedAmount","amount","validationSchema","yup","shape","required","email","phone","balance","password","matches","password_confirmation","oneOf","Loading","height","map","debit","FormLoader","classes","makeStyles","theme","backdrop","zIndex","drawer","color","useStyles","Backdrop","open","CircularProgress","RegisterPage","props","userRegister","useSelector","state","loading","dispatch","useDispatch","useFormik","initialValues","onSubmit","values","userData","a","type","uc","payload","axios","post","route","Object","entries","handleSubmit","handleChange","htmlFor","onChange","to","LoginPage","useState","setEmail","setPassword","e","preventDefault","setItem","stringify","user","window","location","assign","console","log","login","target","value","DEBIT_SAVE_SUCCESS","DEBIT_SAVE_FAIL","DEBITS_LIST_REQUEST","DEBITS_LIST_SUCCESS","DEBITS_LIST_FAIL","DEBIT_PAY_REQUEST","DEBIT_PAY_SUCCESS","DEBIT_PAY_FAIL","makePages","currentPage","dataPerPage","indexOfLastData","indexOfFirstData","slice","Pagination","totalData","paginate","pageNumbers","i","Math","ceil","push","style","marginTop","number","padding","onClick","DebitPage","debitor","setDebitor","setPhone","timeToPay","setTimeToPay","setAmount","amoutToPay","setAmountToPay","debitId","setDebitId","debitsList","debits","isLoading","debitsLoading","debitsError","useEffect","dc","get","count","setCurrentPage","debitsPerPage","length","remainingDays","getDebitId","pageNumber","debitData","paymentData","debit_id","EXPENSE_SUCCESS_REQUEST","EXPENSE_FAIL_REQUEST","FECTCH_EXPENSES_REQUEST","FECTCH_EXPENSES_SUCCESS","FECTCH_EXPENSES_FAIL","ExpensePage","category","setCategory","description","allExpenses","expenses","expenseLoading","expensesError","ec","expensesPerPage","expense","created_At","status","warning","saveExpense","CREDIT_SAVE_SUCCESS","CREDIT_SAVE_FAIL","CREDIT_LIST_REQUEST","CREDIT_LIST_SUCCESS","CREDIT_LIST_FAIL","CREDIT_PAY_REQUEST","CREDIT_PAY_SUCCESS","CREDIT_PAY_FAIL","CreditForm","creditor","setCreditor","creditData","cc","CreditPage","credit_id","setCreditId","allCredits","credits","creditsLoading","creditsPerPage","credit","getCreditId","Menu","class","DepositPage","currency","setCurrency","allDeposits","deposits","depositData","configure","App","path","component","exact","size","clear","href","initialExpenses","debitInitState","isPayLoading","payError","creditInitState","creditsError","initDeposit","require","act","DepositReducer","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","userLogin","Credit","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d324f49b.chunk.js","sourcesContent":["export const userInfo = () => JSON.parse(localStorage.getItem('userInfo'));\nexport const headers = userInfo() ? {'Authorization' : 'Bearer '+ userInfo()['token']} : null;\nexport const user_id  = userInfo()? userInfo()['user'].id: null ;\nexport const name  = userInfo()? userInfo()['user'].name: null ;\n\n     \n\n","import { useEffect } from \"react\";\nimport { userInfo } from \"../helpers/userInfo\";\n\n\nfunction HomePage(){\n    return (<> \n                {/* className=\"home-image\" */}\n                \n                    <div className=\"content\">                                          \n                    \n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1040 320\" className=\"wave f-w\">\n                            <path fill=\"#28365567\" fill-opacity=\"1\" d=\"M0,160L60,170.7C120,181,240,203,360,181.3C480,160,600,96,720,74.7C840,53,960,75,1080,96C1200,117,1320,139,1380,149.3L1440,160L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"></path>\n                        </svg>  \n                        <h2>iManage helps you to:</h2>\n                            <ol>\n                                <li>Record Your expenses</li>\n                                <li>Manage Your personal loans </li>\n                                <li>Know Your debits and Credits</li>\n                            </ol>    \n                          \n                    </div>\n                <div>\n                    <h1 className=\"content text-center\">Why imanage</h1>\n                    <div className=\"three-col\">\n                        <div className=\"box animate\">\n                            <h2 className=\"title text-center\">Expenses</h2>\n                            <p> Sometimes it's really confusing to know How you used your money</p>\n                            <p>But it should no longer be a problem, iManage helps you to Calculate those expenditure</p>\n                        </div>\n                        <div className=\"box\">\n                        <h2 className=\"title text-center\">Debits</h2>\n                            <p>Calculate money you owe your friends and time to pay them before you look bad among them </p>\n                        </div>\n                        <div className=\"box\">\n                             <h2 className=\"title text-center\">Credits</h2>\n                             <p> Did anybody ask you to pay him then you don't recognize when ? and how much he gave you ?</p>\n                             <p> Use imanage to say Good bye to the confusions like those</p>\n                        </div>\n                    </div>\n                </div>                  \n            </>    \n    )\n}\nexport default HomePage;","export const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\" ;\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\" ;\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\" ;\n\n//login constants\nexport const USER_LOGIN_REQUEST= \"USER_LOGIN_REQUEST\" ;\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\" ;\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\" ;\n","//export  const URL_INDEX = \"http://127.0.0.1:8000/api\"|| \"http://localhost/public/api\" || \"https://fathomless-taiga-31341.herokuapp.com/api\";\nexport  const URL_INDEX = \"https://fathomless-taiga-31341.herokuapp.com/api\" || \"http://127.0.0.1:8000/api\";","import {toast} from 'react-toastify';\nimport moment from 'moment';\n\nconst openModal = () => document.querySelector('.modal-bg').classList.add(\"open\");\nconst closeModal = () => document.querySelector('.modal-bg').classList.remove(\"open\");\nconst toggleSidebar = () => document.querySelector('.sidebar').classList.toggle('open');\nconst togglePayModal = () => document.querySelector('.modal-sm').classList.toggle(\"active\");\nconst closePayModal =() => document.querySelector('.modal-sm').classList.remove(\"active\");\n\nconst message = (data, errors)=> {    \n    if (data.error === true) {           \n        errors.forEach(error => {\n       return toast.error(error[1]);            \n        });   \n    }else {\n        toast.success(data.message);\n    }   \n}\nconst formatDate =(date)=> moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\nconst payedAmount =(amount)=>  amount === 0 ? \"No payment\": amount;\n\nexport {openModal, closeModal, togglePayModal, message, formatDate, payedAmount, toggleSidebar, closePayModal};","import * as yup from 'yup';\nconst validationSchema = yup.object().shape({\n    name:yup.string().required(),\n    email: yup.string().email().required(),\n    phone: yup.number().required(),\n    balance: yup.number().required(\"fill in zero if you have no money\"),\n    password: yup.string().required(\"Please enter your password\").matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,})/,\n        \"Must Contain 6 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n    ),\n    password_confirmation:  yup.string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match') \n   \n});\nexport default validationSchema;","import Shimmer from 'react-js-loading-shimmer';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const Loading = () => {\n    const data =[1,3,4,5,2,2,2,2,2];\n    return (\n      <main>\n      <ul className=\"aside sidemenu white-box\">\n          <li> <Shimmer height= \"400px\"/>     </li>                          \n      </ul>\n      <ul className=\"container\">               \n\n          <table className=\"f-w white-box mr-3\">\n              <thead>\n                  <tr>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th> \n                  </tr>\n              </thead>\n              <tbody>\n                {\n                    data.map(debit => {\n                      return (\n                          <tr>\n                              <td><Shimmer /> </td>\n                              <td><Shimmer /> </td>\n                              <td><Shimmer /> </td>\n                              <td><Shimmer /> </td>\n                              <td> <Shimmer /> </td>                                  \n                              <td> <Shimmer /> </td>                                    \n                              <td><Shimmer /> </td>\n                      </tr> \n                      )\n                  }) \n                }\n              \n                          \n              </tbody>\n          </table>\n      </ul>\n    </main>\n    )\n    \n}\nexport const FormLoader = ()=> {\n    const useStyles = makeStyles((theme) => ({\n        backdrop: {\n          zIndex: theme.zIndex.drawer + 1,\n          color: '#d2c4a0',\n        },\n      }));\n      const classes = useStyles();\n      return (\n        <Backdrop className={classes.backdrop} open>\n        <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )\n      \n\n} \n    ","import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  Link} from \"react-router-dom\";\nimport { saveUser } from \"../actions/UserActions\";\nimport { useForm } from 'react-hook-form';\nimport validationSchema from \"../helpers/SignupSchema\";\nimport { ErrorMessemail, Formik,Field, Form, useFormik,  } from \"formik\";\nimport { FormLoader } from \"../helpers/Loading\";\n\n\nfunction RegisterPage(props){\n    \n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error} = userRegister;\n    \n const dispatch = useDispatch();\n const {handleSubmit, handleChange, values, errors} = useFormik({\n     initialValues : {\n         name: '',\n         email: '',\n         phone: '',\n         balance: '',\n         password:'',\n         password_confirmation:''\n     },\n     validationSchema,\n     onSubmit(values) {\n    \n         dispatch(saveUser(values))\n        \n     }\n\n });\n return (\n    <main>\n        <div className=\"aside\">            \n        <ul>\n            { loading ? <FormLoader /> : '' }\n                \n        </ul>    \n        </div>  \n        <form onSubmit={handleSubmit} className=\"container\">                \n            <ul className=\"form-container\">\n                <li className=\"text-center title\">Sign up </li>  \n                <li> \n                    <label htmlFor=\"name\">  name </label>                          \n                    <input type=\"text\" name=\"name\" onChange={handleChange}  />\n                    {errors.name &&<small> {errors.name}</small> }\n                </li>  \n                <li>\n                    <label htmlFor=\"email\">  Email </label>                          \n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange} />\n                    {errors.email &&<small> {errors.email}</small> }\n\n                </li>\n                <li>\n                    <label htmlFor=\"phone\">  Phone </label>                          \n                    <input type=\"text\" name=\"phone\" id=\"phone\" onChange={handleChange} />\n                    {errors.phone &&<small> {errors.phone}</small> }\n\n                </li>\n                <li>\n                    <label htmlFor=\"balance\">  Balance </label>                          \n                    <input type=\"text\" name=\"balance\" id=\"balance\"  onChange={handleChange}/>\n                    {errors.balance &&<small> {errors.balance}</small> }\n                </li>\n                <li>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange}/>\n                    {errors.password &&<small> {errors.password}</small> }\n\n                </li>\n                <li>\n                    <label htmlFor=\"rePassword\">confirm Password</label>\n                    <input type=\"password\" name=\"password_confirmation\" id=\"password_confirmation\" onChange={handleChange}/>\n                    {errors.password_confirmation &&<small> {errors.password_confirmation}</small> }\n\n                </li>\n                <li>\n                    <button className=\"button primary\" type=\"submit\"> Sign Up</button>\n                </li>\n                <li>\n                    <div className=\"flex-inline\">\n                        <label>Already has an Account ?</label> \n                        <label><Link to='/login' className=\"text-link\">   Sign in </Link></label>\n                    </div>\n                </li>\n                \n            </ul>\n       </form>\n    </main>\n\n )\n}\nexport default RegisterPage;","\nimport axios from 'axios';\nimport * as uc from '../constants/UserConstants';\nimport * as route from '../serverRoutes';\nimport { toast } from 'react-toastify';\nimport { message } from '../helpers/popups';\n\nconst saveUser = ( userData ) =>async(dispatch)=>{\n    dispatch({type: uc.USER_REGISTER_REQUEST, payload: userData });\n    try{\n       const {data} = await axios.post(route.URL_INDEX+\"/users\", userData);       \n       const errors = Object.entries(data.message);  \n       dispatch({type:uc.USER_REGISTER_SUCCESS, payload: data});      \n      return message(data, errors);       \n    } catch(error){       \n        dispatch({type: uc.USER_REGISTER_FAIL, payload: error.message});\n    }\n}\nconst login = (email, password) => async(dispatch) => {\n    dispatch({type: uc.USER_LOGIN_REQUEST, payload:{email, password}});\n    try {\n        const { data } = await axios.post(route.URL_INDEX+\"/auth/user\", {email, password});        \n        if(data.error){\n            toast.error(data.message);\n        }else {\n         localStorage.setItem('userInfo', JSON.stringify(data));             \n         dispatch({type:uc.USER_LOGIN_SUCCESS, payload: data.user});\n         window.location.assign(\"/expenses\");\n        }\n    }catch(error){\n        console.log(error.message);\n        toast.error(\"Please provide email and password\");\n    }\n}\nexport {saveUser, login};","import React, { useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useDispatch } from \"react-redux\";\nimport { login } from \"../actions/UserActions\";\n\nfunction LoginPage(props){\n    const [email, setEmail ] =  useState('');\n    const [password, setPassword ] = useState('');\n    const dispatch = useDispatch();\n    const submitHandler = (e)=> {\n        e.preventDefault();\n        dispatch(login(email, password));\n    } \n   \n    return ( \n        <main>\n            <div className=\"aside\">            \n                           \n            </div>\n            <form onSubmit={submitHandler} className=\"container\">\n            <ul className=\"form-container\">\n                <li>\n                    <h2 className=\"text-center\">Login</h2>\n                </li>\n                <li>                        \n                {/* { error && <div> { error } </div> } */}\n                \n                </li>\n                <li>\n                    <label htmlFor=\"email\">  Email </label>                          \n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e)=> setEmail(e.target.value)} />\n                </li>\n                <li>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e)=>setPassword(e.target.value)} />\n                </li>\n                <li>\n                    <button className=\"button primary\" type=\"submit\"> Sign in</button>\n                </li>\n                <li>                \n                    <div className=\"flex-inline\">\n                        <label>New to iManage?</label> \n                        <label><Link to='/register' className=\"text-link\">   Sign up </Link></label>\n                    </div>\n                </li>\n            </ul>\n        </form>\n        </main>\n           \n            \n    )\n}\nexport default LoginPage;","export const DEBIT_SAVE_REQUEST = \"DEBIT_SAVE_REQUEST\";\nexport const DEBIT_SAVE_SUCCESS = \"DEBIT_SAVE_SUCCESS\";\nexport const DEBIT_SAVE_FAIL = \"DEBIT_SAVE_FAIL\";\n\nexport const DEBITS_LIST_REQUEST = \"DEBIT_LIST_REQUEST\";\nexport const DEBITS_LIST_SUCCESS = \"DEBIT_LIST_SUCCESS\";\nexport const DEBITS_LIST_FAIL = \"DEBIT_LIST_FAIL\";\n\nexport const DEBIT_PAY_REQUEST = \"DEBIT_PAY_REQUEST\";\nexport const DEBIT_PAY_SUCCESS = \"DEBIT_PAY_SUCCESS\";\nexport const DEBIT_PAY_FAIL = \"DEBIT_PAY_FAIL\";","import React from 'react';\n\nconst makePages = (data, currentPage, dataPerPage) => {\n        const indexOfLastData = currentPage * dataPerPage ;\n        const indexOfFirstData = indexOfLastData - dataPerPage;\n        return data.slice(indexOfFirstData, indexOfLastData);\n    }\n\nconst Pagination = ({dataPerPage, totalData, paginate}) => {\n    const pageNumbers = [];\n    for (let i = 0; i < Math.ceil(totalData /  dataPerPage); i++) {\n        pageNumbers.push(i);\n    }\n    return (        \n        <ul className=\"f-w\" style={{marginTop: '32px'}}> {\n               pageNumbers.map(number =>(\n                   <li key={ number } className=\"page-item p-1\" style={{padding: '16px'}}> \n                   <a onClick={ () => paginate(number) } className=\"page-links\">\n                       { ++number }\n                       \n                   </a>\n                   </li>\n               ))\n            }\n        </ul>\n    )\n\n}\nexport { Pagination, makePages};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listDebits, saveDebit, saveDebitPayment } from '../actions/DebitActions';\nimport {user_id} from \"../helpers/userInfo\"\nimport{openModal, closeModal, togglePayModal, formatDate, payedAmount, closePayModal} from '../helpers/popups';\n\nimport { Loading } from '../helpers/Loading';\nimport { FaWindowClose } from 'react-icons/fa';\nimport {Pagination, makePages } from '../components/Pagination';\n\n\nfunction DebitPage(props) {\n    const [debitor, setDebitor] = useState('');\n    const [phone, setPhone] = useState('');\n    const [timeToPay, setTimeToPay] = useState('');\n    const [amount, setAmount] = useState('');\n    const [amoutToPay, setAmountToPay] = useState('');\n    const [debitId, setDebitId] = useState(0);\n\n    const debitsList = useSelector((state)=>state.debits);\n    const { debits, isLoading, error, debitsLoading, debitsError } = debitsList;\n    const dispatch = useDispatch();\n\n    const eventHandler = (e) => {\n        e.preventDefault();    \n        const data = { debitor, phone, timeToPay:formatDate(timeToPay), amount, user_id };\n        dispatch(saveDebit(data));\n    };\n    const getDebitId = (debit) => togglePayModal()? setDebitId(debit.id) : togglePayModal(); \n \n    const handlerDebitPay = (e) => { \n        closePayModal();\n        e.preventDefault();\n        const debit = { debit_id: debitId, amount: amoutToPay };\n        dispatch(saveDebitPayment(debit));\n    }\n    useEffect(()=> dispatch(listDebits()), []);\n\n    let count = 0;\n     // pagingation\n     function pagination(){\n\n     }\n    const [currentPage, setCurrentPage] =  useState(1);\n    const [debitsPerPage] = useState(7);\n\n     const paginate = pageNumber => setCurrentPage(pageNumber);\n            \n\n    if(debitsLoading) {\n        return (\n            <Loading />\n        )\n    }\n    return (\n        <>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Debits</li>          \n                <li onClick={openModal}>Add debits</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container white-box\">               \n                \n                {debitsError && <div>{debitsError}</div>}\n                <table className=\"f-w\" id=\"example\">\n                    <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Debitor</th>\n                            <th>phone</th>\n                            <th>Amount</th>\n                            <th>Current Payment</th>\n                            <th>Remaining Days To pay</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    \n                    { debits && debits.length > 0 &&\n                        makePages(debits, currentPage, debitsPerPage).map(debit => {\n                            return (\n                                <tr key={debit.id}>\n                                    <td>{++count}</td>\n                                    <td>{debit.debitor }</td>\n                                    <td>{debit.phone } </td>\n                                    <td>{debit.amount } </td>\n                                    <td> { payedAmount(debit.payedAmount)}</td>                                  \n                                    <td> { debit.remainingDays}</td>                                    \n                                    <td><button className=\"button-sm\" onClick={ () => getDebitId(debit)}>Edit</button></td>\n                            </tr> \n                            )\n                        })\n                    }\n                                            \n                    </tbody>\n                </table>\n\n                <Pagination \n                  dataPerPage ={ debitsPerPage }\n                  totalData = {debits.length} \n                  paginate={ paginate }                    \n                />\n            </ul>\n            <div className=\"modal-bg\">\n                <div className=\"modal white-box\">\n\n                    <div className=\"bg-primary p-1\">\n                        <span onClick={closeModal} className=\"close\"><FaWindowClose /></span>\n                        <h2 className=\"text-center\">Record A Debit</h2>\n                    </div>         \n                    <div>\n                        {isLoading && <div>Loading ...</div>}\n                    {error && <div> {error}</div>}\n                       \n                    </div>           \n                    <form className=\"container\" onSubmit={eventHandler}>\n                        <ul className=\"form-container\">\n                        <li>\n                            <label htmlFor=\"debitor\">  Debitor </label>                          \n                            <input type=\"text\" name=\"debitor\" id=\"debitor\" onChange={(e)=> setDebitor(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"phone\">  Phone </label>                          \n                            <input type=\"phone\" name=\"phone\" id=\"phone\" onChange={(e)=> setPhone(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"amount\"> Amount </label>                          \n                            <input type=\"number\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"timeToPay\"> Payment Date </label>                          \n                            <input type=\"datetime-local\" name=\"timeToPay\" id=\"timeToPay\" onChange={(e)=> setTimeToPay(e.target.value)} required/>\n                        </li>                       \n                        \n                        <li>\n                            <button className=\"button bg-primary\" type=\"submit\">SAVE Debit</button>\n                        </li>\n\n                        </ul>\n                    </form>\n                </div>\n            </div>\n            <div className=\"modal-sm\">\n            {/* <div className=\"modal-content\"> */}\n                   <form className=\"form-container white-box\" onSubmit={handlerDebitPay}>\n                       <ul className=\"form\">\n                           <li>\n                               <label>Amount</label>\n                               <input type=\"text\" name=\"AmountToPay\" onChange={ (e) => setAmountToPay(e.target.value)} />\n                           </li>\n                           <li>\n                               <button className=\"btn-sm\">Pay</button>\n                           </li>\n                       </ul>\n                   </form>\n               {/* </div> */}\n            </div> \n        </>    \n    )\n}\nexport default DebitPage;","import axios from 'axios';\nimport * as route from '../serverRoutes/index';\nimport * as dc from \"../constants/DebitConstants\";\nimport { headers } from '../helpers/userInfo';\nimport { toast } from 'react-toastify';\nimport { message } from '../helpers/popups';\n\nconst saveDebit = (debitData) => async(dispatch) => {\n    \n    //dispatch({type: dc.DEBIT_SAVE_REQUEST, payload: debitData });\n    try {\n        const { data } = await axios.post(`${route.URL_INDEX}/debits`, debitData, {headers: headers});\n        const errors = Object.entries(data.message);     \n       \n        if(data.error === true){\n            return message(data, errors);\n         }else {\n            dispatch({type: dc.DEBIT_SAVE_SUCCESS, payload: data});\n            toast.success(data.message);\n         }  \n    } catch (error) {\n        dispatch({type: dc.DEBIT_SAVE_FAIL, payload: error.message});\n        toast.error(error.message);\n    }\n}\nconst listDebits = () => async(dispatch) =>{\n    dispatch({type: dc.DEBITS_LIST_REQUEST});\n    try {\n        const { data } = await axios.get(`${route.URL_INDEX}/debits`, {headers:headers});\n        dispatch({type:dc.DEBITS_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type:dc.DEBITS_LIST_REQUEST, payload: error.message});\n    }\n}\nconst saveDebitPayment = (paymentData) => async(dispatch) =>{\n      \n    //dispatch({type: dc.DEBIT_PAY_REQUEST});\n    try {\n        const { data } = await axios.post(`${route.URL_INDEX}/pay/debit`, paymentData, {headers:headers});\n        dispatch({type:dc.DEBIT_PAY_SUCCESS, payload: data});\n        toast.success(data.message);\n    } catch (error) {\n        dispatch({type:dc.DEBIT_PAY_FAIL, payload: error.message});\n        toast.error(error.message);\n        console.log(error.message);\n    }\n}\nexport {saveDebit, listDebits, saveDebitPayment};","export const EXPENSE_REGISTER_REQUEST = \"EXPENSE_REGISTER_REQUEST\";\nexport const EXPENSE_SUCCESS_REQUEST = \"EXPENSE_SUCCESS_REQUEST\";\nexport const EXPENSE_FAIL_REQUEST = \"EXPENSE_FAIL_REQUEST\";\n\nexport const FECTCH_EXPENSES_REQUEST = \"FECTCH_EXPENSES_REQUEST\";\nexport const FECTCH_EXPENSES_SUCCESS = \"FECTCH_EXPENSES_SUCCESS\";\nexport const FECTCH_EXPENSES_FAIL= \"FECTCH_EXPENSES_FAIL\";\n\n\n\n\n","import { useEffect, useState } from \"react\";\nimport{openModal, closeModal} from '../helpers/popups';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {saveExpense, getExpenses} from '../actions/ExpenseActions';\nimport { headers, userInfo, user_id } from \"../helpers/userInfo\";\nimport moment from \"moment\";\nimport { FaSearch, FaWindowClose } from 'react-icons/fa';\nimport { Loading } from \"../helpers/Loading\";\n// import { Datatable } from \"../helpers/datatable\";\nimport {Pagination, makePages} from \"../components/Pagination\";\n    \nfunction ExpensePage(props) {\n\n    const [amount, setAmount] = useState('');\n    const [category, setCategory] = useState('');\n    const [description] = useState(\"DUMMY DESCRIPTION\")\n    const [query, setQuery] = useState(''); \n\n    const allExpenses = useSelector(state => state.expenses);\n    const {loading, error, expenses, expenseLoading, expensesError } = allExpenses;\n   \n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n     e.preventDefault();     \n     dispatch(saveExpense(amount, category,user_id, description));\n    }\n    useEffect(() => dispatch(getExpenses()), []); \n    let count = 0;\n    //pagination\n    const [currentPage, setCurrentPage] =  useState(1);\n    const [expensesPerPage] = useState(7);\n\n    //  const indexOfLastExpense = currentPage * expensesPerPage ;\n    //  const indexOfFirstExpense = indexOfLastExpense - expensesPerPage;\n    //  const currentExpense = expenses.slice(indexOfFirstExpense, indexOfLastExpense);\n\n     const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    if(loading) {\n        return  <Loading />\n    }\n    return (\n        <>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Expenditures</li>          \n                <li onClick={openModal}>Add expenditure</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container white-box\">              \n              \n               { error && <div>{error}</div> }               \n                  \n                    <table className=\"f-w example\" id=\"example\">\n                        <tr>\n                            <th>No</th>\n                            <th>Date</th>\n                            <th>Category</th>\n                            <th>Amount</th>\n                        </tr>\n                               \n                        <tbody>\n                            \n                        {  expenses && expenses.length > 0 &&                 \n                            makePages(expenses, currentPage, expensesPerPage).map(expense => {\n                            return (\n                                <tr key={expense.id}>\n                                    <td> {++count} </td>\n                                    <td>{moment(expense.date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\") || expense.created_At } </td>\n                                    <td>{expense.category}  </td>\n                                    <td>{expense.amount}  </td>\n                                    \n                                </tr>   \n                            )  \n                            })  \n                            }                        \n                        </tbody>\n                    </table>\n                <Pagination \n                    dataPerPage ={ expensesPerPage }\n                    totalData = {expenses.length} \n                    paginate={ paginate }                    \n                />    \n            </ul>\n            <div className=\"modal-bg\">\n                <div className=\"modal white-box\">\n\n                    <div className=\"bg-primary p-1\">\n                        <span onClick={closeModal} className=\"close\"> <FaWindowClose /></span>\n                        <h2 className=\"text-center\">Record Expense</h2>\n                    </div>                   \n                    {expenseLoading && <div className=\"warning\">expenseLoading</div>}\n                    {expensesError && <div className=\"warning\"> {expensesError}</div>}             \n                    <form className=\"container\" onSubmit={handleSubmit}>\n                        <ul className=\"form-container\">\n                        <li>\n                            <label htmlFor=\"amount\"> Amount </label>                          \n                            <input type=\"text\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                        </li>\n                        \n                        <li>\n                            <label htmlFor=\"category\">  Category </label>                          \n                            <input type=\"text\" name=\"category\" id=\"category\" onChange={(e)=> setCategory(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <button type=\"submit\" className=\"button bg-primary\">SAVE</button>\n                        </li>\n\n                        </ul>\n                    </form>\n                </div>\n            </div>\n           \n        </>    \n    )\n}\nexport default ExpensePage;","import axios from 'axios';\nimport * as route from '../serverRoutes/index';\nimport * as ec from '../constants/ExpenseConstants';\nimport { headers, user_id} from '../helpers/userInfo';\nimport { toast } from 'react-toastify';\nimport { message } from '../helpers/popups';\n\nconst saveExpense = (amount,  category, user_id, description) => async(dispatch) => {\ntry {\n    const { data} = await axios.post(`${route.URL_INDEX}/expenses`, { amount, category, user_id, description }, { headers: headers});    \n    const errors = Object.entries(data.message);  \n    if(data.error === true){\n        return message(data, errors);\n    }else if( data.status === 400){\n     toast.warning(data.message);\n     }else {\n        dispatch({ type: ec.EXPENSE_SUCCESS_REQUEST, payload: data.expense })\n         toast.success(data.message);\n     }  \n\n} catch (error) {\n    dispatch({type: ec.EXPENSE_FAIL_REQUEST, payload: error.message});\n    toast.error(error.message);\n}\n}\nconst getExpenses = () => async (dispatch) => {\n    dispatch({type: ec.FECTCH_EXPENSES_REQUEST});\n    try {\n        const { data } = await axios.get(`${route.URL_INDEX}/expenses`, { headers: headers });   \n        dispatch({type:ec.FECTCH_EXPENSES_SUCCESS, payload: data});      \n        \n    } catch (error) {\n        dispatch({type: ec.FECTCH_EXPENSES_FAIL, payload: error.message});\n    }\n}\nexport {saveExpense, getExpenses};","export const CREDIT_SAVE_REQUEST = \"CREDIT_SAVE_REQUEST\";\nexport const CREDIT_SAVE_SUCCESS = \"CREDIT_SAVE_SUCCESS\";\nexport const CREDIT_SAVE_FAIL = \"CREDIT_SAVE_FAIL\";\n\nexport const CREDIT_LIST_REQUEST = \"CREDIT_LIST_REQUEST\";\nexport const CREDIT_LIST_SUCCESS = \"CREDIT_LIST_SUCCESS\";\nexport const CREDIT_LIST_FAIL = \"CREDIT_LIST_FAIL\";\n\nexport const CREDIT_PAY_REQUEST = \"CREDIT_PAY_REQUEST\";\nexport const CREDIT_PAY_SUCCESS = \"CREDIT_PAY_SUCCESS\";\nexport const CREDIT_PAY_FAIL = \"CREDIT_PAY_FAIL\";","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { saveCredit } from \"../actions/CreditActions\";\nimport { closeModal, formatDate } from \"../helpers/popups\";\nimport { user_id } from '../helpers/userInfo';\nimport { FaWindowClose } from 'react-icons/fa';\n\n\nconst CreditForm = ()=> {\n    const [creditor, setCreditor] = useState('');\n    const [phone, setPhone] = useState('');\n    const [timeToPay, setTimeToPay] = useState('');\n    const [amount, setAmount] = useState('');\n    const dispatch = useDispatch();\n    \n\n    const submitCredit = (e) => {\n        e.preventDefault();    \n        const data = { creditor, phone, timeToPay:formatDate(timeToPay), amount, user_id };\n        dispatch(saveCredit(data));\n    };\n    return (\n    <div className=\"modal-bg\">\n        <div className=\"modal white-box\">\n\n            <div className=\"bg-primary p-1\">\n                <span onClick={closeModal} className=\"close\"><FaWindowClose /></span>\n                <h2 className=\"text-center\">Record Credits</h2>\n            </div>                    \n            <form className=\"container\" onSubmit={submitCredit}>\n                <ul className=\"form-container\">\n                <li>\n                    <label htmlFor=\"Creditor\">  Creditor </label>                          \n                    <input type=\"text\" name=\"creditor\" id=\"creditor\" onChange={(e)=> setCreditor(e.target.value)} required/>\n                </li>\n                <li>\n                    <label htmlFor=\"phone\">  Phone </label>                          \n                    <input type=\"phone\" name=\"phone\" id=\"phone\" onChange={(e)=> setPhone(e.target.value)} required/>\n                </li>\n                <li>\n                    <label htmlFor=\"amount\"> Amount </label>                          \n                    <input type=\"number\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                </li>\n                <li>\n                    <label htmlFor=\"timeToPay\"> Payment Date </label>                          \n                    <input type=\"date\" name=\"timeToPay\" id=\"timeToPay\" onChange={(e)=> setTimeToPay(e.target.value)} required/>\n                </li>                       \n                \n                <li>\n                    <button className=\"button bg-primary\" type=\"submit\">SAVE Credit</button>\n                </li>\n\n                </ul>\n            </form>\n        </div>\n    </div>\n    )\n}\nexport { CreditForm };","import { headers } from '../helpers/userInfo';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport * as route from '../serverRoutes/index';\nimport * as cc from \"../constants/CreditConstants\";\nimport { message } from '../helpers/popups';\n\n\nconst saveCredit = (creditData) =>async(dispatch)=> {\n\n    //dispatch({type: cc.CREDIT_SAVE_REQUEST, payload: creditData });\n    try {\n        const { data } = await axios.post(route.URL_INDEX+\"/credits\", creditData, {headers: headers});\n        const errors = Object.entries(data.message);\n        if(data.error === true){\n           return message(data, errors);\n        }else if(data.status === 400){\n            toast.warning(data.message);\n        }else{\n            dispatch({type: cc.CREDIT_SAVE_SUCCESS, payload: data});\n            toast.success(data.message);\n        }  \n       \n    } catch (error) {\n        dispatch({type: cc.CREDIT_SAVE_FAIL, payload: error.message }); \n        toast.error(\"message\", error.message);\n    }\n}\nconst listCredits = () => async(dispatch) =>{\n    dispatch({type: cc.CREDIT_LIST_REQUEST});\n    try {\n        const { data } = await axios.get(route.URL_INDEX+\"/credits\", {headers:headers});\n        dispatch({type:cc.CREDIT_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type:cc.CREDIT_LIST_REQUEST, payload: error.message});\n    }\n}\nconst saveCreditPayment = (paymentData) => async(dispatch) =>{\n      \n    //dispatch({type: cc.CREDIT_PAY_REQUEST});\n    try {\n        const { data } = await axios.post(route.URL_INDEX+\"/pay/credit\", paymentData, {headers:headers});\n        dispatch({type:cc.CREDIT_PAY_SUCCESS, payload: data});\n        toast.success(data.message);\n    } catch (error) {\n        dispatch({type:cc.CREDIT_PAY_FAIL, payload: error.message});\n        toast.error(error.message);\n        \n    }\n}\n\nexport {saveCredit, listCredits, saveCreditPayment};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listCredits, saveCreditPayment } from '../actions/CreditActions';\n\nimport{openModal, closeModal, togglePayModal, formatDate, payedAmount, closePayModal} from '../helpers/popups';\n\nimport { CreditForm } from '../components/CreditForm';\nimport {Pagination, makePages} from '../components/Pagination';\nimport { Loading } from '../helpers/Loading';\n\nfunction CreditPage(props) {\n    \n    const [credit_id, setCreditId] = useState(0);\n    const [amoutToPay, setAmountToPay] = useState(1);    \n\n    const allCredits = useSelector((state) => state.credits);\n    const { credits, creditsLoading } = allCredits;\n    const dispatch = useDispatch();\n    const getCreditId = (credit) => togglePayModal()? setCreditId(credit.id) : togglePayModal(); \n    \n    const handlerCreditPay = (e) => {\n        closePayModal();            \n            e.preventDefault();\n            const credit = {\n                credit_id: credit_id,\n                amount: amoutToPay\n            };\n            dispatch(saveCreditPayment(credit));\n        }\n        useEffect(()=>{\n            dispatch(listCredits());\n\n        }, []);\n        let count=0;\n\n        // pagingation \n        const [currentPage, setCurrentPage] =  useState(1);\n        const [creditsPerPage] = useState(7);\n\n        const paginate = pageNumber => setCurrentPage(pageNumber);\n        if(creditsLoading) {\n            return  <Loading />\n        }\n        \n    return (\n        <>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Credits</li>          \n                <li onClick={openModal}>Add Credits</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container mr-3 white-box\">\n                <table className=\"f-w\" id=\"example\">\n                    <tr>\n                        <th>No</th>\n                        <th>Creditor</th>\n                        <th>phone</th>\n                        <th>Amount</th>\n                        <th>Current Payment</th>\n                        <th>Remaining Days To pay</th>\n                        <th>Actions</th>\n                    </tr>\n                    <tbody>                      \n                    { credits && credits.length > 0 &&\n                        makePages(credits, currentPage, creditsPerPage).map(credit => {\n                            return (\n                                <tr key={credit.id}>\n                                    <td> {++count} </td>\n                                    <td>{credit.creditor } </td>\n                                    <td>{credit.phone } </td>\n                                    <td>{credit.amount } </td>\n                                    <td> { payedAmount(credit.payedAmount)} </td>                                  \n                                    <td> { credit.remainingDays} </td>                                    \n                                    <td> <button className=\"button-sm\" onClick={ () => getCreditId(credit)}>Edit</button> </td>\n                            </tr> \n                            )\n                        })   \n                    }             \n                    </tbody>\n                </table>\n                <Pagination \n                     dataPerPage ={ creditsPerPage }\n                     totalData = {credits.length} \n                     paginate={ paginate }                    \n                />\n            </ul>\n           \n            \n            \n            <CreditForm />\n            <div className=\"modal-sm\">\n            <div className=\"modal-content\">\n                   <form className=\"form-container white-box\" onSubmit={handlerCreditPay}>\n                       <ul className=\"form\">\n                           <li>\n                               <label>Amount</label>\n                               <input type=\"text\" name=\"amountToPay\" onChange={(e) => setAmountToPay(e.target.value)}/>\n                           </li>\n                           <li>\n                               <button className=\"btn-sm\" type=\"submit\">Pay</button>\n                           </li>\n                       </ul>\n                   </form>\n               </div>,\n            </div>\n        </>    \n    )\n}\nexport default CreditPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { name } from '../helpers/userInfo';\nimport { VscSignIn, VscAccount } from \"react-icons/vsc\";\nimport { AiOutlineLogin } from \"react-icons/ai\";\nimport { toggleSidebar } from '../helpers/popups';\nconst Menu = () => {  \n    if(name !==null) {\n      return (\n          <>\n        <ul className=\"menu-item\">\n            <li> <Link to=\"credits\" class=\"menu\"> Credits </Link> </li>  \n            <li> <Link to=\"debits\" class=\"menu\"> Debits </Link>  </li>\n            <li> <Link to=\"expenses\" class=\"menu\"> Expense </Link>  </li> \n            <li> <Link to=\"Income\" class=\"menu\"> Income </Link>  </li> \n        </ul>\n        <ul className=\"menu-item\">\n            <li> <Link to=\"expenses\"> <VscAccount onClick={toggleSidebar} className=\"menu\"/> </Link> </li>\n        </ul>\n        </>\n      )\n    } else {\n        return (\n            <>\n            <ul className=\"menu-item\">                 \n                <li> <Link to=\"/register\" class=\"menu\"> Join</Link>   </li>\n            </ul>\n            <ul className=\"menu-item\"> {/** for signin */}\n            <li>\n                 <Link to=\"login\" class=\"menu\"> <AiOutlineLogin/> </Link>  {/** here for signout */}\n            </li>\n            </ul>\n            </>\n        )\n    }\n    \n}\nexport default Menu;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveIncome } from \"../actions/DepositAction\";\nimport { user_id } from \"../helpers/userInfo\";\nconst DepositPage = () => {\n    const [amount, setAmount] = useState(0);\n    const [currency, setCurrency] = useState(\"Rwf\");\n    const allDeposits = useSelector(state=> state.deposits);\n    const { error, deposits } = allDeposits;\n    const dispatch = useDispatch();\n\n    const handleDeposit =(e) => {\n        e.preventDefault();\n        dispatch(saveIncome({ amount, currency,user_id}));\n    }\n\n return(\n    <> \n        <ul>\n            { error && <div> {error}</div>}\n        </ul>\n        <ul className=\"modal-content vh-center\">\n                <form className=\"form-container white-box\" onSubmit={handleDeposit}>\n                    <ul className=\"form \">                      \n        \n                        <li>\n                            <label>Amount</label>\n                            <input type=\"number\" name=\"amount\" onChange={(e) => setAmount(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label>Currecy</label>\n                            <input type=\"text\" name=\"currency\" value={currency} onChange={(e) => setCurrency(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <button className=\"btn-sm\" type=\"submit\">Record Income</button>\n                        </li>\n                    </ul>\n                </form>\n            </ul>\n        \n\n    </>\n )\n}\nexport default DepositPage;","import { message } from \"../helpers/popups\";\nimport { toast } from \"react-toastify\";\nimport axios from 'axios';\nimport { headers, user_id } from \"../helpers/userInfo\";\nimport  { URL_INDEX }   from \"../serverRoutes\";\n\nconst saveIncome= (depositData)=>async(dispatch)=> {\n   \ntry {\n    const { data } = await axios.post(`${URL_INDEX}/deposit`, depositData, { headers:headers });\n    // toast.success(data.message);\n    dispatch({type: \" INCOME_SAVE_SUCCESS \", payload: data});\n    return message(data, data.message);\n} catch (error) {\n    toast.error(error.message);\n}\n}\nexport { saveIncome };","import React from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport HomePage from\"./screens/HomePage\";\nimport RegisterPage from \"./screens/RegisterPage\";\nimport LoginPage from \"./screens/LoginPage\";\nimport DebitPage from \"./screens/DebitPage\";\nimport ExpensePage from \"./screens/ExpensePage\";\n \nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport CreditPage from \"./screens/CreditPage\";\nimport Menu from \"./components/Menu\";\nimport {FaWindowClose } from 'react-icons/fa';\nimport { toggleSidebar } from './helpers/popups';\nimport { FixHeader } from \"./components/FixHeader\";\nimport DepositPage from \"./screens/DepositPage\";\n\n\n\ntoast.configure();\n// FixHeader();\n\nfunction App(props) {\n\n  const handleLogout = () => {\n    localStorage.clear('userInfo');\n    document.location.href= \"/homepage\";\n  }\n  return (\n    <BrowserRouter>\n        <div className=\"wrapper\">\n              <header class=\"header bg-primary\">\n                    <ul className=\"logo\">                \n                      <Link to=\"/\" className=\"menu\">iManage</Link>                   \n                    </ul>                             \n                      <Menu />                                 \n              </header>\n              <main>\n                \n                <Route path=\"/\" component={HomePage} exact=\"true\"/>\n                <Route path=\"/register\" component={RegisterPage} />\n                <Route path=\"/login\" component={LoginPage} />\n                <Route path=\"/debits\" component={DebitPage} />\n                <Route path=\"/credits\" component={CreditPage} />\n                <Route path=\"/expenses\" component={ExpensePage} />\n                <Route path=\"/income\" component={DepositPage} />\n              </main>    \n              <aside className=\"sidebar\">                  \n                  <FaWindowClose onClick={toggleSidebar} size={32}/>  \n                  <ul className=\"menu-item\">\n                    <li className=\"menu\" onClick={handleLogout}> logout</li>\n                  </ul>                \n              </aside>          \n              \n              <footer className=\"bg-primary\">\n                  Developed By <a href=\"janvierdev.netlify.app\"> \t&#169; Janvier</a>\n              </footer>\n          </div>     \n            \n            \n              \n    </BrowserRouter>   \n  );\n}\n\nexport default App;\n","\nimport * as ec from '../constants/ExpenseConstants';\n\nconst initialExpenses = { expenses: [], loading:false, error:null, expenseLoading: false, expensesError: null};\n\nexport default (state = initialExpenses, action) => {\n    switch(action.type) {\n        case ec.FECTCH_EXPENSES_REQUEST :\n            return {loading: true, expenses: [] };\n        case ec.FECTCH_EXPENSES_SUCCESS :\n            return {loading: false, expenses: action.payload};\n\n        case ec.FECTCH_EXPENSES_FAIL:\n            return {loading: false, error: action.payload};\n\n        case ec.EXPENSE_SUCCESS_REQUEST :\n            console.log(\"data from reducer\", action.payload);\n              \n            return { expenseLoading: false, expenses: [...state.expenses, action.payload] }; \n            \n        case ec.EXPENSE_FAIL_REQUEST :\n            \n            return {expenseLoading: false, expensesError: action.payload };\n        default: \n            return state; \n    }\n}\n","import * as dc from '../constants/DebitConstants';\nconst debitInitState = { debits: [], isLoading:false, error:null,\n     debitsLoading: false, debitsError: null, isPayLoading: false, payError: null};\n\nexport default (state = debitInitState, action) => {\n    switch(action.type) { \n        // case dc.DEBIT_SAVE_REQUEST:            \n        //     return {isLoading:true};\n        case dc.DEBIT_SAVE_SUCCESS:            \n            return {isLoading: false, debits: [...state.debits, action.payload.debit]};\n        case dc.DEBIT_SAVE_FAIL:\n            return {isLoading: false, error: action.payload};\n        \n        case dc.DEBITS_LIST_REQUEST :\n            return {debitsLoading: true, debits: []};\n            \n        case dc.DEBITS_LIST_SUCCESS:\n            return {debitsLoading: false, debits: action.payload};\n\n        case dc.DEBITS_LIST_FAIL:\n            return {debitsLoading: false, debitsError: action.payload};\n\n        case dc.DEBIT_PAY_REQUEST :\n            return {isPayLoading: true, debits: []};\n\n        case dc.DEBIT_PAY_SUCCESS:\n            return {isPayLoading: false, debits: state.debits};\n\n        case dc.DEBIT_PAY_FAIL:\n            return {isPayLoading: false, payError: action.payload};\n\n        default:\n            return state;\n\n    }\n\n}","import * as cc from '../constants/CreditConstants';\nconst creditInitState = { credits: [], isLoading:false, error:null,\n    creditsLoading: false, creditsError: null, isPayLoading: false, payError: null};\n\nexport default (state = creditInitState, action) => {\n    switch(action.type) {\n        // case cc.DEBIT_SAVE_REQUEST:            \n        //     return {isLoading:true};\n        case cc.CREDIT_SAVE_SUCCESS:           \n            return {isLoading: false, credits: [...state.credits, action.payload.Credit]};\n            \n        case cc.CREDIT_SAVE_FAIL:            \n            return {isLoading: false, error: action.payload};\n        \n        case cc.CREDIT_LIST_REQUEST :\n            return {creditsLoading: true, credits: []};\n\n        case cc.CREDIT_LIST_SUCCESS:            \n            return {creditsLoading: false, credits: action.payload};\n\n        case cc.CREDIT_LIST_FAIL:\n            return {creditsLoading: false, creditsError: action.payload.message};\n\n        case cc.CREDIT_PAY_REQUEST :\n            return {isPayLoading: true, credits: []};\n\n        case cc.CREDIT_PAY_SUCCESS:            \n            return {isPayLoading: false, credits: state.credits}; /** state credits does not reload */\n\n        case cc.CREDIT_PAY_FAIL:\n            return {isPayLoading: false, payError: action.payload};    \n\n        default:\n            return state;\n\n    }\n\n}","const { act } = require(\"react-dom/test-utils\")\n\nconst initDeposit = {loading: false, deposits:[], error:null}\nconst DepositReducer =( state = initDeposit, action) => {\n    switch(action.type) {\n        case \"INCOME_SAVE_SUCCESS\":\n            return { loading:false, deposits:[...state.deposits, action.payload] };\n\n        case \"INCOME_SAVE_FAIL\":\n            return { loading:false, error: action.payload};\n        default: \n            return state;\n    }\n}\nexport default DepositReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { userRegister, userLogin } from './reducers/UserReducer';\nimport expenses from './reducers/ExpenseReducers';\nimport debits from './reducers/DebitReducer';\nimport credits from './reducers/CreditReducer';\nimport deposits from './reducers/DepositReducer';\n\n//const userInfo = JSON.parse(localStorage.getItem('user'));\nconst initialState = { };\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducer = combineReducers({\n    userRegister,\n    userLogin,\n    expenses,\n    debits,\n    credits,\n    deposits\n});\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","import * as uc from \"../constants/UserConstants\";\nconst userRegister = (state = {}, action) => {\n    switch(action.type) {\n        case uc.USER_REGISTER_REQUEST :\n            return {loading: true}\n        case uc.USER_REGISTER_SUCCESS:\n            return {loading:false, userInfo: action.payload};\n        case uc.USER_REGISTER_FAIL:\n            return {loading:false, error: action.payload};  \n        default:\n            return state;  \n    }\n} \nconst userLogin = (state = {}, action)=> {\n    switch(action.type) {\n        case uc.USER_LOGIN_REQUEST:\n            return {isLoading: true };\n        case uc.USER_LOGIN_SUCCESS:\n            return {isLoading:false, userInfo: action.payload};\n        case uc.USER_LOGIN_FAIL:\n            return {isLoading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport { userRegister , userLogin};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n    <Provider store={store}>\n       <App />    \n    </Provider>,\n  document.getElementById('root')\n);\n// serviceWorker.unRegister();\n\n\n"],"sourceRoot":""}
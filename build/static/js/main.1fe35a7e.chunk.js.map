{"version":3,"sources":["helpers/userInfo.js","screens/HomePage.js","constants/UserConstants.js","serverRoutes/index.js","helpers/popups.js","screens/RegisterPage.js","actions/UserActions.js","screens/LoginPage.js","constants/DebitConstants.js","helpers/Loading.js","screens/DebitPage.js","actions/DebitActions.js","constants/ExpenseConstants.js","screens/ExpensePage.js","actions/ExpenseActions.js","constants/CreditConstants.js","components/CreditForm.js","actions/CreditActions.js","screens/CreditPage.js","components/Menu.js","App.js","components/FixHeader.js","reducers/ExpenseReducers.js","reducers/DebitReducer.js","reducers/CreditReducer.js","store.js","reducers/UserReducer.js","index.js"],"names":["userInfo","JSON","parse","localStorage","getItem","headers","user_id","id","name","HomePage","className","xmlns","viewBox","fill","fill-opacity","d","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","URL_INDEX","openModal","document","querySelector","classList","add","closeModal","remove","toggleSidebar","toggle","togglePayModal","closePayModal","message","data","errors","error","forEach","toast","success","formatDate","date","moment","format","payedAmount","amount","RegisterPage","props","useState","setName","email","setEmail","balance","setBalance","phone","setPhone","password","setPassword","password_confirmation","setPassword_confirmation","useForm","register","handleSubmit","watch","userRegister","useSelector","state","loading","dispatch","useDispatch","redirect","location","search","split","useEffect","history","push","onSubmit","e","preventDefault","userData","console","log","a","type","uc","payload","axios","post","route","Object","entries","htmlFor","onChange","target","value","ref","required","min","pattern","max","to","LoginPage","setItem","stringify","user","window","assign","login","DEBIT_SAVE_SUCCESS","DEBIT_SAVE_FAIL","DEBITS_LIST_REQUEST","DEBITS_LIST_SUCCESS","DEBITS_LIST_FAIL","DEBIT_PAY_REQUEST","DEBIT_PAY_SUCCESS","DEBIT_PAY_FAIL","Loading","height","map","debit","DebitPage","debitor","setDebitor","timeToPay","setTimeToPay","setAmount","amoutToPay","setAmountToPay","debitId","setDebitId","debitsList","debits","isLoading","debitsLoading","debitsError","dc","get","count","onClick","length","remainingDays","getDebitId","debitData","paymentData","debit_id","EXPENSE_SUCCESS_REQUEST","EXPENSE_FAIL_REQUEST","FECTCH_EXPENSES_REQUEST","FECTCH_EXPENSES_SUCCESS","FECTCH_EXPENSES_FAIL","ExpensePage","category","setCategory","description","allExpenses","expenses","expenseLoading","expensesError","ec","expense","created_At","status","warning","saveExpense","CREDIT_SAVE_SUCCESS","CREDIT_SAVE_FAIL","CREDIT_LIST_REQUEST","CREDIT_LIST_SUCCESS","CREDIT_LIST_FAIL","CREDIT_PAY_REQUEST","CREDIT_PAY_SUCCESS","CREDIT_PAY_FAIL","CreditForm","creditor","setCreditor","creditData","cc","CreditPage","credit_id","setCreditId","allCredits","credits","creditsLoading","credit","getCreditId","Menu","class","configure","addEventListener","scroll","scrollTop","$","ready","DataTable","App","size","clear","href","path","component","exact","initialExpenses","debitInitState","isPayLoading","payError","creditInitState","creditsError","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","action","userLogin","Credit","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"2MAAaA,G,MAAW,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQ,eACjDC,EAAUL,IAAa,CAAC,cAAkB,UAAWA,IAAQ,OAAe,KAC5EM,EAAWN,IAAYA,IAAQ,KAAWO,GAAI,KAC9CC,EAAQR,IAAYA,IAAQ,KAAWQ,KAAM,KCqC3CC,MAtCf,WAEI,OAAQ,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,UAAf,UACI,uDACA,+BACI,sDACA,6DACA,oEAGR,qBAAKC,MAAM,6BAA6BC,QAAQ,eAAeF,UAAU,WAAzE,SACI,sBAAMG,KAAK,YAAYC,eAAa,IAAIC,EAAE,kQAGlD,sBAAKL,UAAU,OAAf,UACI,oBAAIA,UAAU,2BAAd,yBACA,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,oBAAd,sBACA,iGACA,0HAEJ,sBAAKA,UAAU,MAAf,UACA,oBAAIA,UAAU,oBAAd,oBACI,6HAEJ,sBAAKA,UAAU,MAAf,UACK,oBAAIA,UAAU,oBAAd,qBACA,2HACA,uG,+DCjChBM,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAGrBC,EAAoB,qBACpBC,EAAqB,qBACrBC,EAAkB,kBCNjBC,EAAY,mD,iBCEpBC,EAAY,kBAAMC,SAASC,cAAc,aAAaC,UAAUC,IAAI,SACpEC,EAAa,kBAAMJ,SAASC,cAAc,aAAaC,UAAUG,OAAO,SACxEC,EAAgB,kBAAMN,SAASC,cAAc,YAAYC,UAAUK,OAAO,SAC1EC,EAAiB,kBAAMR,SAASC,cAAc,aAAaC,UAAUK,OAAO,WAC5EE,EAAe,kBAAMT,SAASC,cAAc,aAAaC,UAAUG,OAAO,WAE1EK,EAAU,SAACC,EAAMC,IACA,IAAfD,EAAKE,MACLD,EAAOE,SAAQ,SAAAD,GAChB,OAAOE,IAAMF,MAAMA,EAAM,OAGxBE,IAAMC,QAAQL,EAAKD,UAGrBO,EAAY,SAACC,GAAD,OAASC,IAAOD,GAAME,OAAO,wBACzCC,EAAa,SAACC,GAAD,OAAuB,IAAXA,EAAe,aAAcA,G,QC0E7CC,MAvFf,SAAsBC,GAAO,IAAD,EACAC,mBAAS,IADT,mBACjBzC,EADiB,KACX0C,EADW,OAEED,mBAAS,IAFX,mBAEjBE,EAFiB,KAEVC,EAFU,OAGMH,mBAAS,IAHf,mBAGjBI,EAHiB,KAGRC,EAHQ,OAICL,mBAAS,IAJV,mBAIlBM,EAJkB,KAIXC,EAJW,OAKQP,mBAAS,IALjB,mBAKjBQ,EALiB,KAKPC,EALO,OAMkCT,mBAAS,IAN3C,mBAMjBU,EANiB,KAMMC,EANN,OAS0BC,cAA1CC,EATgB,EAShBA,SAA+B1B,GATf,EASN2B,aATM,EASQC,MATR,EASe5B,QAEjC6B,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,gBACxCG,EAA6BH,EAA7BG,QAASpE,EAAoBiE,EAApBjE,SAAUqC,EAAU4B,EAAV5B,MACrBgC,EAAWC,cACXC,EAAWvB,EAAMwB,SAASC,OAASzB,EAAMwB,SAASC,OAAOC,MAAM,KAAK,GAAG,YAc7E,OAbAC,qBAAU,WACH3E,GACAgD,EAAM4B,QAAQC,KAAKN,KAIxB,CAACvE,IAQC,iCACI,qBAAKU,UAAU,QAAf,SACC,+BACK0D,GAAW,kDACX/B,GAAS,gCAAOA,EAAP,YAGf,sBAAMyC,SAdQ,SAACC,GACnBA,EAAEC,iBACF,ICvBWC,EDuBL9C,EAAO,CAAC3B,OAAM2C,QAAOI,QAAOF,UAASI,WAAUE,yBACrDuB,QAAQC,IAAIhD,GACbkC,GCzBYY,EDyBM9C,ECzBR,uCAAe,WAAMkC,GAAN,mBAAAe,EAAA,6DAC5Bf,EAAS,CAACgB,KAAMC,EAA0BC,QAASN,IADvB,kBAGJO,IAAMC,KAAKC,EAAgB,SAAUT,GAHjC,uBAGlB9C,EAHkB,EAGlBA,KACDC,EAASuD,OAAOC,QAAQzD,EAAKD,SAJV,kBAKnBA,EAAQC,EAAMC,IALK,kCAQxBiC,EAAS,CAACgB,KAAMC,EAAuBC,QAAS,KAAMrD,UAR9B,0DAAf,yDDmC0BxB,UAAU,YAAzC,SACI,qBAAIA,UAAU,iBAAd,UACI,oBAAIA,UAAU,oBAAd,sBACA,+BACI,uBAAOmF,QAAQ,OAAf,qBACA,uBAAOR,KAAK,OAAO7E,KAAK,OAAOD,GAAG,OAAOuF,SAAU,SAACf,GAAD,OAAM7B,EAAQ6B,EAAEgB,OAAOC,QAAQC,IAAKnC,EAAS,CAAEoC,UAAU,EAAKC,IAAK,MACtH,gCAAQ/D,EAAO5B,MAAQ,wBAE3B,+BACI,uBAAOqF,QAAQ,QAAf,sBACA,uBAAOR,KAAK,QAAQ7E,KAAK,QAAQD,GAAG,QAAQuF,SAAU,SAACf,GAAD,OAAM3B,EAAS2B,EAAEgB,OAAOC,QAAQC,IAAKnC,EAAS,CAACoC,UAAU,EAAME,QAAS,iBAC9H,gCAAQhE,EAAOe,OAAS,yBAG5B,+BACI,uBAAO0C,QAAQ,QAAf,sBACA,uBAAOR,KAAK,OAAO7E,KAAK,QAAQD,GAAG,QAAQuF,SAAU,SAACf,GAAD,OAAMvB,EAASuB,EAAEgB,OAAOC,QAAQC,IAAKnC,EAAS,CAACqC,IAAI,EAAGE,IAAI,OAC/G,gCAAQjE,EAAOmB,OAAS,yBAG5B,+BACI,uBAAOsC,QAAQ,QAAf,wBACA,uBAAOR,KAAK,OAAO7E,KAAK,UAAUD,GAAG,UAAUuF,SAAU,SAACf,GAAD,OAAMzB,EAAWyB,EAAEgB,OAAOC,aAEvF,+BACI,uBAAOH,QAAQ,WAAf,sBACA,uBAAOR,KAAK,WAAW7E,KAAK,WAAWD,GAAG,WAAWuF,SAAU,SAACf,GAAD,OAAMrB,EAAYqB,EAAEgB,OAAOC,aAE9F,+BACI,uBAAOH,QAAQ,aAAf,8BACA,uBAAOR,KAAK,WAAW7E,KAAK,wBAAwBD,GAAG,wBAAwBuF,SAAU,SAACf,GAAD,OAAMnB,EAAyBmB,EAAEgB,OAAOC,aAErI,6BACI,wBAAQtF,UAAU,iBAAiB2E,KAAK,SAAxC,yBAEJ,6BACI,sBAAK3E,UAAU,cAAf,UACI,6DACA,gCAAO,cAAC,IAAD,CAAM4F,GAAG,SAAS5F,UAAU,YAA5B,yCE5BpB6F,MA/Cf,SAAmBvD,GAAO,IAAD,EACOC,mBAAS,IADhB,mBACdE,EADc,KACPC,EADO,OAEYH,mBAAS,IAFrB,mBAEdQ,EAFc,KAEJC,EAFI,KAGfW,EAAWC,cAMjB,OACI,iCACI,qBAAK5D,UAAU,UAGf,sBAAMoE,SAVQ,SAACC,GACnBA,EAAEC,iBACFX,EDOM,SAAClB,EAAOM,GAAR,8CAAqB,WAAMY,GAAN,iBAAAe,EAAA,6DAC/Bf,EAAS,CAACgB,KAAMC,EAAuBC,QAAQ,CAACpC,QAAOM,cADxB,kBAGJ+B,IAAMC,KAAKC,EAAgB,aAAc,CAACvC,QAAOM,aAH7C,iBAGnBtB,EAHmB,EAGnBA,MACAE,MACJE,IAAMF,MAAMF,EAAKD,UAEpB/B,aAAaqG,QAAQ,WAAYvG,KAAKwG,UAAUtE,IAChDkC,EAAS,CAACgB,KAAKC,EAAuBC,QAASpD,EAAKuE,OACpDC,OAAOnC,SAASoC,OAAO,cATG,gDAY3BrE,IAAMF,MAAM,KAAMH,SAZS,yDAArB,sDCPG2E,CAAM1D,EAAOM,KAQa/C,UAAU,YAAzC,SACA,qBAAIA,UAAU,iBAAd,UACI,6BACI,oBAAIA,UAAU,cAAd,qBAEJ,uBAIA,+BACI,uBAAOmF,QAAQ,QAAf,sBACA,uBAAOR,KAAK,QAAQ7E,KAAK,QAAQD,GAAG,QAAQuF,SAAU,SAACf,GAAD,OAAM3B,EAAS2B,EAAEgB,OAAOC,aAElF,+BACI,uBAAOH,QAAQ,WAAf,sBACA,uBAAOR,KAAK,WAAW7E,KAAK,WAAWD,GAAG,WAAWuF,SAAU,SAACf,GAAD,OAAKrB,EAAYqB,EAAEgB,OAAOC,aAE7F,6BACI,wBAAQtF,UAAU,iBAAiB2E,KAAK,SAAxC,wBAEJ,6BACI,sBAAK3E,UAAU,cAAf,UACI,oDACA,gCAAO,cAAC,IAAD,CAAM4F,GAAG,YAAY5F,UAAU,YAA/B,yCCzClBoG,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAsB,qBACtBC,EAAsB,qBACtBC,EAAmB,kBAEnBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iB,QCRjBC,EAAU,WAEnB,OACE,iCACA,oBAAI5G,UAAU,2BAAd,SACI,mCAAK,cAAC,IAAD,CAAS6G,OAAQ,UAAtB,aAEJ,oBAAI7G,UAAU,YAAd,SAEI,wBAAOA,UAAU,qBAAjB,UACI,gCACI,+BACI,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,YAGR,gCApBE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAsBR8G,KAAI,SAAAC,GACP,OACI,+BACI,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,+BAAI,cAAC,IAAD,IAAJ,OACA,mCAAK,cAAC,IAAD,IAAL,OACA,mCAAK,cAAC,IAAD,IAAL,OACA,+BAAI,cAAC,IAAD,IAAJ,wB,QC6GfC,MArIf,SAAmB1E,GAAQ,IAAD,EACQC,mBAAS,IADjB,mBACf0E,EADe,KACNC,EADM,OAEI3E,mBAAS,IAFb,mBAEfM,EAFe,KAERC,EAFQ,OAGYP,mBAAS,IAHrB,mBAGf4E,EAHe,KAGJC,EAHI,OAIM7E,mBAAS,IAJf,mBAIfH,EAJe,KAIPiF,EAJO,OAKe9E,mBAAS,IALxB,mBAKf+E,EALe,KAKHC,EALG,OAMQhF,mBAAS,GANjB,mBAMfiF,EANe,KAMNC,EANM,KAQhBC,EAAalE,aAAY,SAACC,GAAD,OAASA,EAAMkE,UACtCA,EAAyDD,EAAzDC,OAAQC,GAAiDF,EAAjDE,UAAWjG,GAAsC+F,EAAtC/F,MAAOkG,GAA+BH,EAA/BG,cAAeC,GAAgBJ,EAAhBI,YAC3CnE,GAAWC,cAejBK,qBAAU,kBAAKN,GCVA,uCAAM,WAAMA,GAAN,iBAAAe,EAAA,6DACrBf,EAAS,CAACgB,KAAMoD,IADK,kBAGMjD,IAAMkD,IAAN,UAAahD,EAAb,WAAuC,CAACrF,QAAQA,IAHtD,gBAGT8B,EAHS,EAGTA,KACRkC,EAAS,CAACgB,KAAKoD,EAAwBlD,QAASpD,IAJ/B,gDAMjBkC,EAAS,CAACgB,KAAKoD,EAAwBlD,QAAS,KAAMrD,UANrC,yDAAN,yDDUwB,IAEvC,IAAIyG,GAAQ,EACZ,OAAGJ,GAEK,cAAC,EAAD,IAIJ,iCACI,qBAAI7H,UAAU,2BAAd,UACI,yCACA,oBAAIkI,QAASrH,EAAb,2BAGJ,qBAAIb,UAAU,YAAd,UAEK8H,IAAe,8BAAMA,KACtB,wBAAO9H,UAAU,gBAAgBH,GAAG,UAApC,UACI,gCACI,+BACI,oCACA,yCACA,uCACA,wCACA,iDACA,uDACA,8CAGR,gCAEE8H,GAAUA,EAAOQ,OAAS,GACxBR,EAAOb,KAAI,SAAAC,GACP,OACI,+BACI,+BAAOkB,KACP,6BAAKlB,EAAME,UACX,+BAAKF,EAAMlE,MAAX,OACA,+BAAKkE,EAAM3E,OAAX,OACA,mCAAOD,EAAY4E,EAAM5E,gBACzB,mCAAO4E,EAAMqB,iBACb,6BAAI,wBAAQpI,UAAU,YAAYkI,QAAU,kBAlDzD,SAACnB,GAAD,OAAWzF,IAAkBmG,EAAWV,EAAMlH,IAAMyB,IAkDW+G,CAAWtB,IAAzD,sBAPCA,EAAMlH,eAgBnC,qBAAKG,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UAEI,sBAAKA,UAAU,iBAAf,UACI,sBAAMkI,QAAShH,EAAYlB,UAAU,QAArC,SAA6C,cAAC,IAAD,MAC7C,oBAAIA,UAAU,cAAd,+BAEJ,gCACK4H,IAAa,8CACjBjG,IAAS,oCAAOA,SAGjB,sBAAM3B,UAAU,YAAYoE,SA5EvB,SAACC,GAClBA,EAAEC,iBACF,ICjBWgE,EDiBL7G,EAAO,CAAEwF,UAASpE,QAAOsE,UAAUpF,EAAWoF,GAAY/E,SAAQxC,WACxE+D,IClBW2E,EDkBQ7G,EClBT,uCAAe,WAAMkC,GAAN,mBAAAe,EAAA,+EAIFI,IAAMC,KAAN,UAAcC,EAAd,WAAwCsD,EAAW,CAAC3I,QAASA,IAJ3D,mBAIjB8B,EAJiB,EAIjBA,KACFC,EAASuD,OAAOC,QAAQzD,EAAKD,UAEjB,IAAfC,EAAKE,MAPiB,0CAQdH,EAAQC,EAAMC,IARA,QAUrBiC,EAAS,CAACgB,KAAMoD,EAAuBlD,QAASpD,IAChDI,IAAMC,QAAQL,EAAKD,SAXE,0DAczBmC,EAAS,CAACgB,KAAMoD,EAAoBlD,QAAS,KAAMrD,UACnDK,IAAMF,MAAM,KAAMH,SAfO,0DAAf,yDD2FE,SACI,qBAAIxB,UAAU,iBAAd,UACA,+BACI,uBAAOmF,QAAQ,UAAf,wBACA,uBAAOR,KAAK,OAAO7E,KAAK,UAAUD,GAAG,UAAUuF,SAAU,SAACf,GAAD,OAAM6C,EAAW7C,EAAEgB,OAAOC,QAAQE,UAAQ,OAEvG,+BACI,uBAAOL,QAAQ,QAAf,sBACA,uBAAOR,KAAK,QAAQ7E,KAAK,QAAQD,GAAG,QAAQuF,SAAU,SAACf,GAAD,OAAMvB,EAASuB,EAAEgB,OAAOC,QAAQE,UAAQ,OAElG,+BACI,uBAAOL,QAAQ,SAAf,sBACA,uBAAOR,KAAK,SAAS7E,KAAK,SAASD,GAAG,SAASuF,SAAU,SAACf,GAAD,OAAMgD,EAAUhD,EAAEgB,OAAOC,QAAQE,UAAQ,OAEtG,+BACI,uBAAOL,QAAQ,YAAf,4BACA,uBAAOR,KAAK,iBAAiB7E,KAAK,YAAYD,GAAG,YAAYuF,SAAU,SAACf,GAAD,OAAM+C,EAAa/C,EAAEgB,OAAOC,QAAQE,UAAQ,OAGvH,6BACI,wBAAQxF,UAAU,oBAAoB2E,KAAK,SAA3C,oCAOhB,qBAAK3E,UAAU,WAAf,SAEO,sBAAMA,UAAU,2BAA2BoE,SAlGlC,SAACC,GAGrB,ICEkBkE,EDJlBhH,IACA8C,EAAEC,iBAEFX,ICCkB4E,EDFJ,CAAEC,SAAUhB,EAASpF,OAAQkF,GCE1B,uCAAiB,WAAM3D,GAAN,iBAAAe,EAAA,6DAEtCf,EAAS,CAACgB,KAAMoD,IAFsB,kBAIXjD,IAAMC,KAAN,UAAcC,EAAd,cAA2CuD,EAAa,CAAC5I,QAAQA,IAJtD,gBAI1B8B,EAJ0B,EAI1BA,KACRkC,EAAS,CAACgB,KAAKoD,EAAsBlD,QAASpD,IAC9CI,IAAMC,QAAQL,EAAKD,SANe,kDAQlCmC,EAAS,CAACgB,KAAKoD,EAAmBlD,QAAS,KAAMrD,UACjDK,IAAMF,MAAM,KAAMH,SAClBgD,QAAQC,IAAI,KAAMjD,SAVgB,0DAAjB,yDD6FN,SACI,qBAAIxB,UAAU,OAAd,UACI,+BACI,2CACA,uBAAO2E,KAAK,OAAO7E,KAAK,cAAcsF,SAAW,SAACf,GAAD,OAAOkD,EAAelD,EAAEgB,OAAOC,aAEpF,6BACI,wBAAQtF,UAAU,SAAlB,8BErIlByI,EAA0B,0BAC1BC,GAAuB,uBAEvBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAsB,uBC+FpBC,OA1Ff,SAAqBxG,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACjBH,EADiB,KACTiF,EADS,OAEQ9E,mBAAS,IAFjB,mBAEjBwG,EAFiB,KAEPC,EAFO,OAGFzG,mBAAS,qBAAxB0G,EAHiB,sBAIE1G,mBAAS,IAJX,mBAMlB2G,GANkB,UAMJ1F,aAAY,SAAAC,GAAK,OAAIA,EAAM0F,aACxCzF,EAA4DwF,EAA5DxF,QAAS/B,EAAmDuH,EAAnDvH,MAAOwH,EAA4CD,EAA5CC,SAAUC,EAAkCF,EAAlCE,eAAgBC,EAAkBH,EAAlBG,cAE3C1F,EAAWC,cAMjBK,qBAAU,kBAAMN,ECDA,uCAAM,WAAOA,GAAP,iBAAAe,EAAA,6DACtBf,EAAS,CAACgB,KAAM2E,KADM,kBAGKxE,IAAMkD,IAAN,UAAahD,EAAb,aAAyC,CAAErF,QAASA,IAHzD,gBAGV8B,EAHU,EAGVA,KACRkC,EAAS,CAACgB,KAAK2E,GAA4BzE,QAASpD,IAJlC,gDAOlBkC,EAAS,CAACgB,KAAM2E,GAAyBzE,QAAS,KAAMrD,UAPtC,yDAAN,yDDCyB,IACzC,IAAIyG,EAAQ,EACZ,OAAGvE,EACS,cAAC,EAAD,IAGR,iCACI,qBAAI1D,UAAU,2BAAd,UACI,+CACA,oBAAIkI,QAASrH,EAAb,gCAGJ,qBAAIb,UAAU,YAAd,UAEK2B,GAAS,8BAAMA,IAEZ,wBAAO3B,UAAU,gBAAgBH,GAAG,UAApC,UACI,+BACI,oCACA,sCACA,0CACA,2CAGJ,gCAEGsJ,GAAYA,EAAShB,OAAS,GAC7BgB,EAASrC,KAAI,SAAAyC,GACb,OACI,+BACI,qCAAQtB,EAAR,OACA,+BAAKhG,IAAOsH,EAAQvH,MAAME,OAAO,kCAAoCqH,EAAQC,WAA7E,OACA,+BAAKD,EAAQR,SAAb,QACA,+BAAKQ,EAAQnH,OAAb,UAJKmH,EAAQ1J,eAcrC,qBAAKG,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UAEI,sBAAKA,UAAU,iBAAf,UACI,uBAAMkI,QAAShH,EAAYlB,UAAU,QAArC,cAA8C,cAAC,IAAD,OAC9C,oBAAIA,UAAU,cAAd,+BAEHoJ,GAAkB,qBAAKpJ,UAAU,UAAf,4BAClBqJ,GAAiB,sBAAKrJ,UAAU,UAAf,cAA2BqJ,KAC7C,sBAAMrJ,UAAU,YAAYoE,SAxDvB,SAACC,GACrBA,EAAEC,iBACFX,ECjBe,SAACvB,EAAS2G,EAAUnJ,EAASqJ,GAA7B,8CAA6C,WAAMtF,GAAN,mBAAAe,EAAA,+EAEvCI,IAAMC,KAAN,UAAcC,EAAd,aAA0C,CAAE5C,SAAQ2G,WAAUnJ,UAASqJ,eAAe,CAAEtJ,QAASA,IAF1D,mBAErD8B,EAFqD,EAErDA,KACFC,EAASuD,OAAOC,QAAQzD,EAAKD,UACjB,IAAfC,EAAKE,MAJqD,0CAKlDH,EAAQC,EAAMC,IALoC,QAMnC,MAAhBD,EAAKgI,OACd5H,IAAM6H,QAAQjI,EAAKD,UAEhBmC,EAAS,CAAEgB,KAAM2E,EAA4BzE,QAASpD,EAAK8H,UAC1D1H,IAAMC,QAAQL,EAAKD,UAVqC,0DAc7DmC,EAAS,CAACgB,KAAM2E,GAAyBzE,QAAS,KAAMrD,UACxDK,IAAMF,MAAM,KAAMH,SAf2C,0DAA7C,sDDiBNmI,CAAYvH,EAAQ2G,EAASnJ,EAASqJ,KAsDhC,SACI,qBAAIjJ,UAAU,iBAAd,UACA,+BACI,uBAAOmF,QAAQ,SAAf,sBACA,uBAAOR,KAAK,OAAO7E,KAAK,SAASD,GAAG,SAASuF,SAAU,SAACf,GAAD,OAAMgD,EAAUhD,EAAEgB,OAAOC,QAAQE,UAAQ,OAGpG,+BACI,uBAAOL,QAAQ,WAAf,yBACA,uBAAOR,KAAK,OAAO7E,KAAK,WAAWD,GAAG,WAAWuF,SAAU,SAACf,GAAD,OAAM2E,EAAY3E,EAAEgB,OAAOC,QAAQE,UAAQ,OAE1G,6BACI,wBAAQb,KAAK,SAAS3E,UAAU,oBAAhC,kC,QEzFf4J,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBCFzBC,GAAa,WAAM,IAAD,EACY7H,mBAAS,IADrB,mBACb8H,EADa,KACHC,EADG,OAEM/H,mBAAS,IAFf,mBAEbM,EAFa,KAENC,EAFM,OAGcP,mBAAS,IAHvB,mBAGb4E,EAHa,KAGFC,EAHE,OAIQ7E,mBAAS,IAJjB,mBAIbH,EAJa,KAILiF,EAJK,KAKd1D,EAAWC,cAQjB,OACA,qBAAK5D,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UAEI,sBAAKA,UAAU,iBAAf,UACI,sBAAMkI,QAAShH,EAAYlB,UAAU,QAArC,SAA6C,cAAC,IAAD,MAC7C,oBAAIA,UAAU,cAAd,+BAEJ,sBAAMA,UAAU,YAAYoE,SAbf,SAACC,GAClBA,EAAEC,iBACF,ICVYiG,EDUN9I,EAAO,CAAE4I,WAAUxH,QAAOsE,UAAUpF,EAAWoF,GAAY/E,SAAQxC,WACzE+D,GCXY4G,EDWQ9I,ECXT,uCAAe,WAAMkC,GAAN,mBAAAe,EAAA,+EAIHI,IAAMC,KAAKC,EAAgB,WAAYuF,EAAY,CAAC5K,QAASA,IAJ1D,mBAIlB8B,EAJkB,EAIlBA,KACFC,EAASuD,OAAOC,QAAQzD,EAAKD,UACjB,IAAfC,EAAKE,MANkB,0CAOhBH,EAAQC,EAAMC,IAPE,QAQD,MAAhBD,EAAKgI,OACV5H,IAAM6H,QAAQjI,EAAKD,UAEnBmC,EAAS,CAACgB,KAAM6F,GAAwB3F,QAASpD,IACjDI,IAAMC,QAAQL,EAAKD,UAZG,0DAgB1BmC,EAAS,CAACgB,KAAM6F,GAAqB3F,QAAS,KAAMrD,UACpDK,IAAMF,MAAM,UAAW,KAAMH,SAjBH,0DAAf,yDDqBP,SACI,qBAAIxB,UAAU,iBAAd,UACA,+BACI,uBAAOmF,QAAQ,WAAf,yBACA,uBAAOR,KAAK,OAAO7E,KAAK,WAAWD,GAAG,WAAWuF,SAAU,SAACf,GAAD,OAAMiG,EAAYjG,EAAEgB,OAAOC,QAAQE,UAAQ,OAE1G,+BACI,uBAAOL,QAAQ,QAAf,sBACA,uBAAOR,KAAK,QAAQ7E,KAAK,QAAQD,GAAG,QAAQuF,SAAU,SAACf,GAAD,OAAMvB,EAASuB,EAAEgB,OAAOC,QAAQE,UAAQ,OAElG,+BACI,uBAAOL,QAAQ,SAAf,sBACA,uBAAOR,KAAK,SAAS7E,KAAK,SAASD,GAAG,SAASuF,SAAU,SAACf,GAAD,OAAMgD,EAAUhD,EAAEgB,OAAOC,QAAQE,UAAQ,OAEtG,+BACI,uBAAOL,QAAQ,YAAf,4BACA,uBAAOR,KAAK,OAAO7E,KAAK,YAAYD,GAAG,YAAYuF,SAAU,SAACf,GAAD,OAAM+C,EAAa/C,EAAEgB,OAAOC,QAAQE,UAAQ,OAG7G,6BACI,wBAAQxF,UAAU,oBAAoB2E,KAAK,SAA3C,sCE8DL8F,OArGf,SAAoBnI,GAAQ,IAAD,EAEUC,mBAAS,GAFnB,mBAEhBmI,EAFgB,KAELC,EAFK,OAGcpI,mBAAS,GAHvB,mBAGhB+E,EAHgB,KAGJC,EAHI,OAKgBhF,mBAAS,GALzB,gCAMEA,mBAAS,KAE5BqI,GARiB,oBAQJpH,aAAY,SAACC,GAAD,OAAWA,EAAMoH,YACxCA,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,eACXnH,EAAWC,cAYbK,qBAAU,WACNN,EDLQ,uCAAM,WAAMA,GAAN,iBAAAe,EAAA,6DACtBf,EAAS,CAACgB,KAAM6F,KADM,kBAGK1F,IAAMkD,IAAIhD,EAAgB,WAAY,CAACrF,QAAQA,IAHpD,gBAGV8B,EAHU,EAGVA,KACRkC,EAAS,CAACgB,KAAK6F,GAAwB3F,QAASpD,IAJ9B,gDAMlBkC,EAAS,CAACgB,KAAK6F,GAAwB3F,QAAS,KAAMrD,UANpC,yDAAN,yDCOT,IACH,IAAIyG,EAAM,EAQV,OAAG6C,EACS,cAAC,EAAD,IAIZ,iCACI,qBAAI9K,UAAU,2BAAd,UACI,0CACA,oBAAIkI,QAASrH,EAAb,4BAGJ,oBAAIb,UAAU,iBAAd,SACI,wBAAOA,UAAU,gBAAgBH,GAAG,UAApC,UAEI,+BACI,oCACA,0CACA,uCACA,wCACA,iDACA,uDACA,4CAEJ,gCACEgL,GAAWA,EAAQ1C,OAAS,GAC1B0C,EAAQ/D,KAAI,SAAAiE,GACR,OACI,+BACI,qCAAQ9C,EAAR,OACA,+BAAK8C,EAAOV,SAAZ,OACA,+BAAKU,EAAOlI,MAAZ,OACA,+BAAKkI,EAAO3I,OAAZ,OACA,mCAAOD,EAAY4I,EAAO5I,aAA1B,OACA,mCAAO4I,EAAO3C,cAAd,OACA,mCAAK,wBAAQpI,UAAU,YAAYkI,QAAU,kBAzDzD,SAAC6C,GAAD,OAAYzJ,IAAkBqJ,EAAYI,EAAOlL,IAAMyB,IAyDQ0J,CAAYD,IAA1D,kBAAL,SAPKA,EAAOlL,cAqBpC,cAAC,GAAD,IACA,sBAAKG,UAAU,WAAf,UACA,qBAAKA,UAAU,gBAAf,SACO,sBAAMA,UAAU,2BAA2BoE,SAxEjC,SAACC,GAGlB,IDWekE,ECbnBhH,IACI8C,EAAEC,iBAKFX,GDOe4E,ECXA,CACXmC,UAAWA,EACXtI,OAAQkF,GDSE,uCAAiB,WAAM3D,GAAN,iBAAAe,EAAA,6DAEvCf,EAAS,CAACgB,KAAM6F,KAFuB,kBAIZ1F,IAAMC,KAAKC,EAAgB,cAAeuD,EAAa,CAAC5I,QAAQA,IAJpD,gBAI3B8B,EAJ2B,EAI3BA,KACRkC,EAAS,CAACgB,KAAK6F,GAAuB3F,QAASpD,IAC/CI,IAAMC,QAAQL,EAAKD,SANgB,kDAQnCmC,EAAS,CAACgB,KAAK6F,GAAoB3F,QAAS,KAAMrD,UAClDK,IAAMF,MAAM,KAAMH,SAClBgD,QAAQC,IAAI,KAAMjD,SAViB,0DAAjB,yDC0DP,SACI,qBAAIxB,UAAU,OAAd,UACI,+BACI,2CACA,uBAAO2E,KAAK,OAAO7E,KAAK,cAAcsF,SAAU,SAACf,GAAD,OAAOkD,EAAelD,EAAEgB,OAAOC,aAEnF,6BACI,wBAAQtF,UAAU,SAAS2E,KAAK,SAAhC,0BATnB,W,kBCzDGsG,GA9BF,WACT,OAAW,OAARnL,EAEG,qCACF,qBAAIE,UAAU,YAAd,UACI,mCAAK,cAAC,IAAD,CAAM4F,GAAG,UAAUsF,MAAM,OAAzB,uBAAL,OACA,mCAAK,cAAC,IAAD,CAAMtF,GAAG,SAASsF,MAAM,OAAxB,sBAAL,QACA,mCAAK,cAAC,IAAD,CAAMtF,GAAG,WAAWsF,MAAM,OAA1B,uBAAL,WAEJ,oBAAIlL,UAAU,YAAd,SACI,mCAAK,eAAC,IAAD,CAAM4F,GAAG,WAAT,cAAqB,cAAC,KAAD,CAAYsC,QAAS9G,EAAepB,UAAU,SAAnE,OAAL,YAMA,qCACA,oBAAIA,UAAU,YAAd,SACI,mCAAK,cAAC,IAAD,CAAM4F,GAAG,YAAYsF,MAAM,OAA3B,mBAAL,WAEJ,qBAAIlL,UAAU,YAAd,cACA,+BACK,eAAC,IAAD,CAAM4F,GAAG,QAAQsF,MAAM,OAAvB,cAA+B,cAAC,KAAD,IAA/B,OADL,e,kCCNZrJ,IAAMsJ,YCpBFrK,SAASsK,iBAAiB,oBAAoB,WAC1CnF,OAAOoF,QAAO,kBAAKpF,OAAOqF,UAAY,EAAIxK,SAASC,gBAAgBC,UAAUC,IAAI,cAAeH,SAASC,gBAAgBC,UAAUG,OAAO,oBDsBlJoK,KAAEzK,UAAU0K,OAAM,WAChBD,KAAE,SAASE,eAuCEC,OArCf,SAAapJ,GAMX,OACE,eAAC,IAAD,WACI,gCACM,sBAAKtC,UAAU,wBAAf,UACM,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CAAM4F,GAAG,YAAY5F,UAAU,OAA/B,uBAEA,cAAC,GAAD,OAER,wBAAOA,UAAU,UAAjB,UACI,cAAC,IAAD,CAAekI,QAAS9G,EAAeuK,KAAM,KAC7C,oBAAI3L,UAAU,YAAd,SACE,oBAAIA,UAAU,OAAOkI,QAhBlB,WACnBzI,aAAamM,MAAM,YACnB9K,SAASgD,SAAS+H,KAAM,aAcR,0BAIN,yBAAQ7L,UAAU,oBAAlB,0BACiB,mBAAG6L,KAAK,yBAAR,kCAGnB,cAAC,KAAD,CAAOC,KAAK,YAAYC,UAAWhM,EAAUiM,MAAM,SACnD,cAAC,KAAD,CAAOF,KAAK,YAAYC,UAAW1J,IACnC,cAAC,KAAD,CAAOyJ,KAAK,SAASC,UAAWlG,IAChC,cAAC,KAAD,CAAOiG,KAAK,UAAUC,UAAW/E,IACjC,cAAC,KAAD,CAAO8E,KAAK,WAAWC,UAAWtB,KAClC,cAAC,KAAD,CAAOqB,KAAK,YAAYC,UAAWjD,S,0BEvDzCmD,GAAkB,CAAE9C,SAAU,GAAIzF,SAAQ,EAAO/B,MAAM,KAAMyH,gBAAgB,EAAOC,cAAe,MCFnG6C,GAAiB,CAAEvE,OAAQ,GAAIC,WAAU,EAAOjG,MAAM,KACvDkG,eAAe,EAAOC,YAAa,KAAMqE,cAAc,EAAOC,SAAU,MCDvEC,GAAkB,CAAExB,QAAS,GAAIjD,WAAU,EAAOjG,MAAM,KAC1DmJ,gBAAgB,EAAOwB,aAAc,KAAMH,cAAc,EAAOC,SAAU,MCQxEG,GAAkBtG,OAAOuG,sCAAwCC,KACjEC,GAAUC,aAAgB,CAC5BpJ,aCXiB,WAAyB,IAAxBE,EAAuB,uDAAf,GAAImJ,EAAW,uCACzC,OAAOA,EAAOjI,MACV,KAAKC,EACD,MAAO,CAAClB,SAAS,GACrB,KAAKkB,EACD,MAAO,CAAClB,SAAQ,EAAOpE,SAAUsN,EAAO/H,SAC5C,KAAKD,EACD,MAAO,CAAClB,SAAQ,EAAO/B,MAAOiL,EAAO/H,SACzC,QACI,OAAOpB,IDGfoJ,UCAc,WAAwB,IAAvBpJ,EAAsB,uDAAd,GAAImJ,EAAU,uCACrC,OAAOA,EAAOjI,MACV,KAAKC,EACD,MAAO,CAACgD,WAAW,GACvB,KAAKhD,EACD,MAAO,CAACgD,WAAU,EAAOtI,SAAUsN,EAAO/H,SAC9C,KAAKD,EACD,MAAO,CAACgD,WAAW,EAAOjG,MAAOiL,EAAO/H,SAC5C,QACI,OAAOpB,IDRf0F,SHTW,WAAsC,IAArC1F,EAAoC,uDAA5BwI,GAAiBW,EAAW,uCAChD,OAAOA,EAAOjI,MACV,KAAK2E,GACD,MAAO,CAAC5F,SAAS,EAAMyF,SAAU,IACrC,KAAKG,GACD,MAAO,CAAC5F,SAAS,EAAOyF,SAAUyD,EAAO/H,SAE7C,KAAKyE,GACD,MAAO,CAAC5F,SAAS,EAAO/B,MAAOiL,EAAO/H,SAE1C,KAAKyE,EAGD,OAFA9E,QAAQC,IAAI,oBAAqBmI,EAAO/H,SAEjC,CAAEuE,gBAAgB,EAAOD,SAAS,GAAD,oBAAM1F,EAAM0F,UAAZ,CAAsByD,EAAO/H,WAEzE,KAAKyE,GAED,MAAO,CAACF,gBAAgB,EAAOC,cAAeuD,EAAO/H,SACzD,QACI,OAAOpB,IGTfkE,OFXW,WAAqC,IAApClE,EAAmC,uDAA3ByI,GAAgBU,EAAW,uCAC/C,OAAOA,EAAOjI,MAGV,KAAKoD,EACD,MAAO,CAACH,WAAW,EAAOD,OAAO,GAAD,oBAAMlE,EAAMkE,QAAZ,CAAoBiF,EAAO/H,QAAQkC,SACvE,KAAKgB,EACD,MAAO,CAACH,WAAW,EAAOjG,MAAOiL,EAAO/H,SAE5C,KAAKkD,EACD,MAAO,CAACF,eAAe,EAAMF,OAAQ,IACzC,KAAKI,EACD,MAAO,CAACF,eAAe,EAAOF,OAAQiF,EAAO/H,SACjD,KAAKkD,EACD,MAAO,CAACF,eAAe,EAAOC,YAAa8E,EAAO/H,SAEtD,KAAKkD,EACD,MAAO,CAACoE,cAAc,EAAMxE,OAAQ,IACxC,KAAKI,EACD,MAAO,CAACoE,cAAc,EAAOxE,OAAQiF,EAAO/H,SAChD,KAAKkD,EACD,MAAO,CAACoE,cAAc,EAAOC,SAAUQ,EAAO/H,SAClD,QACI,OAAOpB,IEXfoH,QDZW,WAAsC,IAArCpH,EAAoC,uDAA5B4I,GAAiBO,EAAW,uCAChD,OAAOA,EAAOjI,MAGV,KAAK6F,GACD,MAAO,CAAC5C,WAAW,EAAOiD,QAAQ,GAAD,oBAAMpH,EAAMoH,SAAZ,CAAqB+B,EAAO/H,QAAQiI,UAEzE,KAAKtC,GACD,MAAO,CAAC5C,WAAW,EAAOjG,MAAOiL,EAAO/H,SAE5C,KAAK2F,GACD,MAAO,CAACM,gBAAgB,EAAMD,QAAS,IAE3C,KAAKL,GACD,MAAO,CAACM,gBAAgB,EAAOD,QAAS+B,EAAO/H,SAEnD,KAAK2F,GACD,MAAO,CAACM,gBAAgB,EAAOwB,aAAcM,EAAO/H,QAAQrD,SAEhE,KAAKgJ,GACD,MAAO,CAAC2B,cAAc,EAAMtB,QAAS,IAEzC,KAAKL,GACD,MAAO,CAAC2B,cAAc,EAAOtB,QAAQ,GAAD,oBAAMpH,EAAMoH,SAAZ,CAAqB+B,EAAO/H,WAEpE,KAAK2F,GACD,MAAO,CAAC2B,cAAc,EAAOC,SAAUQ,EAAO/H,SAElD,QACI,OAAOpB,MCdJsJ,GADDC,aAAYN,GAVL,GAU4BH,GAAgBU,aAAgBC,QEVjFC,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACG,cAAC,GAAD,MAELjM,SAASuM,eAAe,W","file":"static/js/main.1fe35a7e.chunk.js","sourcesContent":["export const userInfo = () => JSON.parse(localStorage.getItem('userInfo'));\nexport const headers = userInfo() ? {'Authorization' : 'Bearer '+ userInfo()['token']} : null;\nexport const user_id  = userInfo()? userInfo()['user'].id: null ;\nexport const name  = userInfo()? userInfo()['user'].name: null ;\n\n\n/*\nexport const user_id  = JSON.parse(localStorage.getItem('user'))['id'];\nexport const name  = JSON.parse(localStorage.getItem('user'))['name'];\nexport const logout = localStorage.clear('userInfo');   \n*/          \n\n","import { userInfo } from \"../helpers/userInfo\";\n\nfunction HomePage(){\n  \n    return (<div className=\"main\">\n                <div className=\"home-image\">\n                    <div className=\"content\">\n                        <h2>iManage helps you to:</h2>\n                        <ol>\n                            <li>Record Your expenses</li>\n                            <li>Manage Your personal loans </li>\n                            <li>Know Your debits and Credits</li>\n                        </ol>                      \n                    </div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" className=\"wave f-w\">\n                        <path fill=\"#28365567\" fill-opacity=\"1\" d=\"M0,160L60,170.7C120,181,240,203,360,181.3C480,160,600,96,720,74.7C840,53,960,75,1080,96C1200,117,1320,139,1380,149.3L1440,160L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"></path>\n                    </svg>             \n                </div>\n                <div className=\"main\">\n                    <h1 className=\"content text-center mt-5\">Why imanage</h1>\n                    <div className=\"three-col\">\n                        <div className=\"box animate\">\n                            <h2 className=\"title text-center\">Expenses</h2>\n                            <p> Sometimes it's really confusing to know How you used your money</p>\n                            <p>But it should no longer be a problem, iManage helps you to Calculate those expenditure</p>\n                        </div>\n                        <div className=\"box\">\n                        <h2 className=\"title text-center\">Debits</h2>\n                            <p>Calculate money you owe your friends and time to pay them before you look bad among them </p>\n                        </div>\n                        <div className=\"box\">\n                             <h2 className=\"title text-center\">Credits</h2>\n                             <p> Did anybody ask you to pay him then you don't recognize when ? and how much he gave you ?</p>\n                             <p> Use imanage to say Good bye to the confusions like those</p>\n                        </div>\n                    </div>\n                </div>                  \n            </div>    \n    )\n}\nexport default HomePage;","export const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\" ;\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\" ;\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\" ;\n\n//login constants\nexport const USER_LOGIN_REQUEST= \"USER_LOGIN_REQUEST\" ;\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\" ;\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\" ;\n","//export  const URL_INDEX = \"http://127.0.0.1:8000/api\"|| \"http://localhost/public/api\" || \"https://fathomless-taiga-31341.herokuapp.com/api\";\nexport  const URL_INDEX = \"https://fathomless-taiga-31341.herokuapp.com/api\" || \"http://127.0.0.1:8000/api\";","import {toast} from 'react-toastify';\nimport moment from 'moment';\n\nconst openModal = () => document.querySelector('.modal-bg').classList.add(\"open\");\nconst closeModal = () => document.querySelector('.modal-bg').classList.remove(\"open\");\nconst toggleSidebar = () => document.querySelector('.sidebar').classList.toggle('open');\nconst togglePayModal = () => document.querySelector('.modal-sm').classList.toggle(\"active\");\nconst closePayModal =() => document.querySelector('.modal-sm').classList.remove(\"active\");\n\nconst message = (data, errors)=> {    \n    if (data.error === true) {           \n        errors.forEach(error => {\n       return toast.error(error[1]);            \n        });   \n    }else {\n        toast.success(data.message);\n    }   \n}\nconst formatDate =(date)=> moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\nconst payedAmount =(amount)=>  amount === 0 ? \"No payment\": amount;\n\nexport {openModal, closeModal, togglePayModal, message, formatDate, payedAmount, toggleSidebar, closePayModal};","import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  Link} from \"react-router-dom\";\nimport { saveUser } from \"../actions/UserActions\";\nimport { useForm } from 'react-hook-form';\n\nfunction RegisterPage(props){\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [balance, setBalance] = useState('');\n    const[phone, setPhone] = useState('');\n    const [password, setPassword] = useState('');\n    const [password_confirmation, setPassword_confirmation] = useState('');\n    //const [message, setMessage] = useState('');\n\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, userInfo, error } = userRegister;\n    const dispatch = useDispatch();\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1]:'/register';\n    useEffect(()=> {\n        if(userInfo) {            \n           props.history.push(redirect);\n\n        }\n \n    },[userInfo]) //if user state info change then useEffect() will executes it's code\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const data = {name, email, phone, balance, password, password_confirmation};\n        console.log(data);\n       dispatch(saveUser(data));\n    } \n    return ( \n        <main>\n            <div className=\"aside\">            \n             <ul>\n                { loading && <div>Please wait ...</div>}             \n                { error && <div>{ error } </div> }\n             </ul>    \n            </div>       \n            <form onSubmit={submitHandler} className=\"container\">                \n                <ul className=\"form-container\">\n                    <li className=\"text-center title\">Sign up </li>  \n                    <li>\n                        <label htmlFor=\"name\">  name </label>                          \n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={(e)=> setName(e.target.value)} ref={register({ required: true,min: 2 })}/>\n                        <small>{errors.name && \"Name is required\"}</small>\n                    </li>\n                    <li>\n                        <label htmlFor=\"email\">  Email </label>                          \n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={(e)=> setEmail(e.target.value)} ref={register({required: true, pattern: /^\\S+@\\S+$/i})} />\n                        <small>{errors.email && \"Email is required\"}</small>\n\n                    </li>\n                    <li>\n                        <label htmlFor=\"phone\">  Phone </label>                          \n                        <input type=\"text\" name=\"phone\" id=\"phone\" onChange={(e)=> setPhone(e.target.value)} ref={register({min:9, max:11 })}/>\n                        <small>{errors.phone && \"Phone is required\"}</small>\n\n                    </li>\n                    <li>\n                        <label htmlFor=\"phone\">  Balance </label>                          \n                        <input type=\"text\" name=\"balance\" id=\"balance\" onChange={(e)=> setBalance(e.target.value)} />\n                    </li>\n                    <li>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={(e)=> setPassword(e.target.value)}/>\n                    </li>\n                    <li>\n                        <label htmlFor=\"rePassword\">confirm Password</label>\n                        <input type=\"password\" name=\"password_confirmation\" id=\"password_confirmation\" onChange={(e)=> setPassword_confirmation(e.target.value)}/>\n                    </li>\n                    <li>\n                        <button className=\"button primary\" type=\"submit\"> Register</button>\n                    </li>\n                    <li>\n                        <div className=\"flex-inline\">\n                            <label>Already has an Account ?</label> \n                            <label><Link to='/login' className=\"text-link\">   Sign in </Link></label>\n                        </div>\n                    </li>\n                    \n                </ul>\n            </form>\n      \n        </main>\n        \n   \n        \n    )\n} \nexport default RegisterPage;","\nimport axios from 'axios';\nimport * as uc from '../constants/UserConstants';\nimport * as route from '../serverRoutes';\nimport { toast } from 'react-toastify';\nimport { message } from '../helpers/popups';\n\nconst saveUser = ( userData ) =>async(dispatch)=>{\n    dispatch({type: uc.USER_REGISTER_REQUEST, payload: userData });\n    try{\n       const {data} = await axios.post(route.URL_INDEX+\"/users\", userData);       \n       const errors = Object.entries(data.message);        \n      return message(data, errors);     \n          \n    } catch(error){       \n        dispatch({type: uc.USER_REGISTER_FAIL, payload: error.message});\n    }\n}\nconst login = (email, password) => async(dispatch) => {\n    dispatch({type: uc.USER_LOGIN_REQUEST, payload:{email, password}});\n    try {\n        const { data } = await axios.post(route.URL_INDEX+\"/auth/user\", {email, password});        \n        if(data.error){\n            toast.error(data.message);\n        }else {\n         localStorage.setItem('userInfo', JSON.stringify(data));             \n         dispatch({type:uc.USER_LOGIN_SUCCESS, payload: data.user});\n         window.location.assign(\"/expenses\");\n        }\n    }catch(error){\n        toast.error(error.message);\n    }\n}\nexport {saveUser, login};","import React, { useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useDispatch } from \"react-redux\";\nimport { login } from \"../actions/UserActions\";\n\nfunction LoginPage(props){\n    const [email, setEmail ] =  useState('');\n    const [password, setPassword ] = useState('');\n    const dispatch = useDispatch();\n    const submitHandler = (e)=> {\n        e.preventDefault();\n        dispatch(login(email, password));\n    } \n   \n    return ( \n        <main>\n            <div className=\"aside\">            \n                           \n            </div>\n            <form onSubmit={submitHandler} className=\"container\">\n            <ul className=\"form-container\">\n                <li>\n                    <h2 className=\"text-center\">Login</h2>\n                </li>\n                <li>                        \n                {/* { error && <div> { error } </div> } */}\n                \n                </li>\n                <li>\n                    <label htmlFor=\"email\">  Email </label>                          \n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e)=> setEmail(e.target.value)} />\n                </li>\n                <li>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e)=>setPassword(e.target.value)} />\n                </li>\n                <li>\n                    <button className=\"button primary\" type=\"submit\"> Sign in</button>\n                </li>\n                <li>                \n                    <div className=\"flex-inline\">\n                        <label>New to iManage?</label> \n                        <label><Link to='/register' className=\"text-link\">   Sign up </Link></label>\n                    </div>\n                </li>\n            </ul>\n        </form>\n        </main>\n           \n            \n    )\n}\nexport default LoginPage;","export const DEBIT_SAVE_REQUEST = \"DEBIT_SAVE_REQUEST\";\nexport const DEBIT_SAVE_SUCCESS = \"DEBIT_SAVE_SUCCESS\";\nexport const DEBIT_SAVE_FAIL = \"DEBIT_SAVE_FAIL\";\n\nexport const DEBITS_LIST_REQUEST = \"DEBIT_LIST_REQUEST\";\nexport const DEBITS_LIST_SUCCESS = \"DEBIT_LIST_SUCCESS\";\nexport const DEBITS_LIST_FAIL = \"DEBIT_LIST_FAIL\";\n\nexport const DEBIT_PAY_REQUEST = \"DEBIT_PAY_REQUEST\";\nexport const DEBIT_PAY_SUCCESS = \"DEBIT_PAY_SUCCESS\";\nexport const DEBIT_PAY_FAIL = \"DEBIT_PAY_FAIL\";","import Shimmer from 'react-js-loading-shimmer';\n\nexport const Loading = () => {\n    const data =[1,3,4,5,2,2,2,2,2];\n    return (\n      <main>\n      <ul className=\"aside sidemenu white-box\">\n          <li> <Shimmer height= \"400px\"/>     </li>                          \n      </ul>\n      <ul className=\"container\">               \n\n          <table className=\"f-w white-box mr-3\">\n              <thead>\n                  <tr>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th>\n                      <th><Shimmer /> </th> \n                  </tr>\n              </thead>\n              <tbody>\n                {\n                    data.map(debit => {\n                      return (\n                          <tr>\n                              <td><Shimmer /> </td>\n                              <td><Shimmer /> </td>\n                              <td><Shimmer /> </td>\n                              <td><Shimmer /> </td>\n                              <td> <Shimmer /> </td>                                  \n                              <td> <Shimmer /> </td>                                    \n                              <td><Shimmer /> </td>\n                      </tr> \n                      )\n                  }) \n                }\n              \n                          \n              </tbody>\n          </table>\n      </ul>\n    </main>\n    )\n    \n}\n    ","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listDebits, saveDebit, saveDebitPayment } from '../actions/DebitActions';\nimport {user_id} from \"../helpers/userInfo\"\nimport{openModal, closeModal, togglePayModal, formatDate, payedAmount, closePayModal} from '../helpers/popups';\n\nimport { Loading } from '../helpers/Loading';\nimport { FaWindowClose } from 'react-icons/fa';\n\n\nfunction DebitPage(props) {\n    const [debitor, setDebitor] = useState('');\n    const [phone, setPhone] = useState('');\n    const [timeToPay, setTimeToPay] = useState('');\n    const [amount, setAmount] = useState('');\n    const [amoutToPay, setAmountToPay] = useState('');\n    const [debitId, setDebitId] = useState(0);\n\n    const debitsList = useSelector((state)=>state.debits);\n    const { debits, isLoading, error, debitsLoading, debitsError } = debitsList;\n    const dispatch = useDispatch();\n\n    const eventHandler = (e) => {\n        e.preventDefault();    \n        const data = { debitor, phone, timeToPay:formatDate(timeToPay), amount, user_id };\n        dispatch(saveDebit(data));\n    };\n    const getDebitId = (debit) => togglePayModal()? setDebitId(debit.id) : togglePayModal(); \n \n    const handlerDebitPay = (e) => { \n        closePayModal();\n        e.preventDefault();\n        const debit = { debit_id: debitId, amount: amoutToPay };\n        dispatch(saveDebitPayment(debit));\n    }\n    useEffect(()=> dispatch(listDebits()), []);\n\n    let count = 0;\n    if(debitsLoading) {\n        return (\n            <Loading />\n        )\n    }\n    return (\n        <main>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Debits</li>          \n                <li onClick={openModal}>Add debits</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container\">               \n                \n                {debitsError && <div>{debitsError}</div>}\n                <table className=\"f-w white-box\" id=\"example\">\n                    <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Debitor</th>\n                            <th>phone</th>\n                            <th>Amount</th>\n                            <th>Current Payment</th>\n                            <th>Remaining Days To pay</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    \n                    { debits && debits.length > 0 &&\n                        debits.map(debit => {\n                            return (\n                                <tr key={debit.id}>\n                                    <td>{++count}</td>\n                                    <td>{debit.debitor }</td>\n                                    <td>{debit.phone } </td>\n                                    <td>{debit.amount } </td>\n                                    <td> { payedAmount(debit.payedAmount)}</td>                                  \n                                    <td> { debit.remainingDays}</td>                                    \n                                    <td><button className=\"button-sm\" onClick={ () => getDebitId(debit)}>Edit</button></td>\n                            </tr> \n                            )\n                        })\n                    }\n                                            \n                    </tbody>\n                </table>\n            </ul>\n            <div className=\"modal-bg\">\n                <div className=\"modal white-box\">\n\n                    <div className=\"bg-primary p-1\">\n                        <span onClick={closeModal} className=\"close\"><FaWindowClose /></span>\n                        <h2 className=\"text-center\">Record A Debit</h2>\n                    </div>         \n                    <div>\n                        {isLoading && <div>Loading ...</div>}\n                    {error && <div> {error}</div>}\n                       \n                    </div>           \n                    <form className=\"container\" onSubmit={eventHandler}>\n                        <ul className=\"form-container\">\n                        <li>\n                            <label htmlFor=\"debitor\">  Debitor </label>                          \n                            <input type=\"text\" name=\"debitor\" id=\"debitor\" onChange={(e)=> setDebitor(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"phone\">  Phone </label>                          \n                            <input type=\"phone\" name=\"phone\" id=\"phone\" onChange={(e)=> setPhone(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"amount\"> Amount </label>                          \n                            <input type=\"number\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"timeToPay\"> Payment Date </label>                          \n                            <input type=\"datetime-local\" name=\"timeToPay\" id=\"timeToPay\" onChange={(e)=> setTimeToPay(e.target.value)} required/>\n                        </li>                       \n                        \n                        <li>\n                            <button className=\"button bg-primary\" type=\"submit\">SAVE Debit</button>\n                        </li>\n\n                        </ul>\n                    </form>\n                </div>\n            </div>\n            <div className=\"modal-sm\">\n            {/* <div className=\"modal-content\"> */}\n                   <form className=\"form-container white-box\" onSubmit={handlerDebitPay}>\n                       <ul className=\"form\">\n                           <li>\n                               <label>Amount</label>\n                               <input type=\"text\" name=\"AmountToPay\" onChange={ (e) => setAmountToPay(e.target.value)} />\n                           </li>\n                           <li>\n                               <button className=\"btn-sm\">Pay</button>\n                           </li>\n                       </ul>\n                   </form>\n               {/* </div> */}\n            </div> \n        </main>    \n    )\n}\nexport default DebitPage;","import axios from 'axios';\nimport * as route from '../serverRoutes/index';\nimport * as dc from \"../constants/DebitConstants\";\nimport { headers } from '../helpers/userInfo';\nimport { toast } from 'react-toastify';\nimport { message } from '../helpers/popups';\n\nconst saveDebit = (debitData) => async(dispatch) => {\n    \n    //dispatch({type: dc.DEBIT_SAVE_REQUEST, payload: debitData });\n    try {\n        const { data } = await axios.post(`${route.URL_INDEX}/debits`, debitData, {headers: headers});\n        const errors = Object.entries(data.message);     \n       \n        if(data.error === true){\n            return message(data, errors);\n         }else {\n            dispatch({type: dc.DEBIT_SAVE_SUCCESS, payload: data});\n            toast.success(data.message);\n         }  \n    } catch (error) {\n        dispatch({type: dc.DEBIT_SAVE_FAIL, payload: error.message});\n        toast.error(error.message);\n    }\n}\nconst listDebits = () => async(dispatch) =>{\n    dispatch({type: dc.DEBITS_LIST_REQUEST});\n    try {\n        const { data } = await axios.get(`${route.URL_INDEX}/debits`, {headers:headers});\n        dispatch({type:dc.DEBITS_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type:dc.DEBITS_LIST_REQUEST, payload: error.message});\n    }\n}\nconst saveDebitPayment = (paymentData) => async(dispatch) =>{\n      \n    dispatch({type: dc.DEBIT_PAY_REQUEST});\n    try {\n        const { data } = await axios.post(`${route.URL_INDEX}/pay/debit`, paymentData, {headers:headers});\n        dispatch({type:dc.DEBIT_PAY_SUCCESS, payload: data});\n        toast.success(data.message);\n    } catch (error) {\n        dispatch({type:dc.DEBIT_PAY_FAIL, payload: error.message});\n        toast.error(error.message);\n        console.log(error.message);\n    }\n}\nexport {saveDebit, listDebits, saveDebitPayment};","export const EXPENSE_REGISTER_REQUEST = \"EXPENSE_REGISTER_REQUEST\";\nexport const EXPENSE_SUCCESS_REQUEST = \"EXPENSE_SUCCESS_REQUEST\";\nexport const EXPENSE_FAIL_REQUEST = \"EXPENSE_FAIL_REQUEST\";\n\nexport const FECTCH_EXPENSES_REQUEST = \"FECTCH_EXPENSES_REQUEST\";\nexport const FECTCH_EXPENSES_SUCCESS = \"FECTCH_EXPENSES_SUCCESS\";\nexport const FECTCH_EXPENSES_FAIL= \"FECTCH_EXPENSES_FAIL\";\n\n\n\n\n","import { useEffect, useState } from \"react\";\nimport{openModal, closeModal} from '../helpers/popups';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {saveExpense, getExpenses} from '../actions/ExpenseActions';\nimport { headers, userInfo, user_id } from \"../helpers/userInfo\";\nimport moment from \"moment\";\nimport { FaSearch, FaWindowClose } from 'react-icons/fa';\nimport { Loading } from \"../helpers/Loading\";\nimport { Datatable } from \"../helpers/datatable\";\n\n\nfunction ExpensePage(props) {\n    const [amount, setAmount] = useState('');\n    const [category, setCategory] = useState('');\n    const [description] = useState(\"DUMMY DESCRIPTION\")\n    const [query, setQuery] = useState(''); \n\n    const allExpenses = useSelector(state => state.expenses);\n    const {loading, error, expenses, expenseLoading, expensesError } = allExpenses;\n   \n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n     e.preventDefault();     \n     dispatch(saveExpense(amount, category,user_id, description));\n    }\n    useEffect(() => dispatch(getExpenses()), []); \n    let count = 0;\n    if(loading) {\n        return  <Loading />\n    }\n    return (\n        <main>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Expenditures</li>          \n                <li onClick={openModal}>Add expenditure</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container\">              \n              \n               { error && <div>{error}</div> }               \n                  \n                    <table className=\"f-w white-box\" id=\"example\">\n                        <tr>\n                            <th>No</th>\n                            <th>Date</th>\n                            <th>Category</th>\n                            <th>Amount</th>\n                        </tr>\n                               \n                        <tbody>\n                            \n                        {  expenses && expenses.length > 0 &&                 \n                            expenses.map(expense => {\n                            return (\n                                <tr key={expense.id}>\n                                    <td> {++count} </td>\n                                    <td>{moment(expense.date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\") || expense.created_At } </td>\n                                    <td>{expense.category}  </td>\n                                    <td>{expense.amount}  </td>\n                                    \n                                </tr>   \n                            )  \n                            })  \n                            }                        \n                        </tbody>\n                </table>\n              \n            </ul>\n            <div className=\"modal-bg\">\n                <div className=\"modal white-box\">\n\n                    <div className=\"bg-primary p-1\">\n                        <span onClick={closeModal} className=\"close\"> <FaWindowClose /></span>\n                        <h2 className=\"text-center\">Record Expense</h2>\n                    </div>                   \n                    {expenseLoading && <div className=\"warning\">expenseLoading</div>}\n                    {expensesError && <div className=\"warning\"> {expensesError}</div>}             \n                    <form className=\"container\" onSubmit={handleSubmit}>\n                        <ul className=\"form-container\">\n                        <li>\n                            <label htmlFor=\"amount\"> Amount </label>                          \n                            <input type=\"text\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                        </li>\n                        \n                        <li>\n                            <label htmlFor=\"category\">  Category </label>                          \n                            <input type=\"text\" name=\"category\" id=\"category\" onChange={(e)=> setCategory(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <button type=\"submit\" className=\"button bg-primary\">SAVE</button>\n                        </li>\n\n                        </ul>\n                    </form>\n                </div>\n            </div>\n           \n        </main>    \n    )\n}\nexport default ExpensePage;","import axios from 'axios';\nimport * as route from '../serverRoutes/index';\nimport * as ec from '../constants/ExpenseConstants';\nimport { headers, user_id} from '../helpers/userInfo';\nimport { toast } from 'react-toastify';\nimport { message } from '../helpers/popups';\n\nconst saveExpense = (amount,  category, user_id, description) => async(dispatch) => {\ntry {\n    const { data} = await axios.post(`${route.URL_INDEX}/expenses`, { amount, category, user_id, description }, { headers: headers});    \n    const errors = Object.entries(data.message);  \n    if(data.error === true){\n        return message(data, errors);\n    }else if( data.status === 400){\n     toast.warning(data.message);\n     }else {\n        dispatch({ type: ec.EXPENSE_SUCCESS_REQUEST, payload: data.expense })\n         toast.success(data.message);\n     }  \n\n} catch (error) {\n    dispatch({type: ec.EXPENSE_FAIL_REQUEST, payload: error.message});\n    toast.error(error.message);\n}\n}\nconst getExpenses = () => async (dispatch) => {\n    dispatch({type: ec.FECTCH_EXPENSES_REQUEST});\n    try {\n        const { data } = await axios.get(`${route.URL_INDEX}/expenses`, { headers: headers });   \n        dispatch({type:ec.FECTCH_EXPENSES_SUCCESS, payload: data});      \n        \n    } catch (error) {\n        dispatch({type: ec.FECTCH_EXPENSES_FAIL, payload: error.message});\n    }\n}\nexport {saveExpense, getExpenses};","export const CREDIT_SAVE_REQUEST = \"CREDIT_SAVE_REQUEST\";\nexport const CREDIT_SAVE_SUCCESS = \"CREDIT_SAVE_SUCCESS\";\nexport const CREDIT_SAVE_FAIL = \"CREDIT_SAVE_FAIL\";\n\nexport const CREDIT_LIST_REQUEST = \"CREDIT_LIST_REQUEST\";\nexport const CREDIT_LIST_SUCCESS = \"CREDIT_LIST_SUCCESS\";\nexport const CREDIT_LIST_FAIL = \"CREDIT_LIST_FAIL\";\n\nexport const CREDIT_PAY_REQUEST = \"CREDIT_PAY_REQUEST\";\nexport const CREDIT_PAY_SUCCESS = \"CREDIT_PAY_SUCCESS\";\nexport const CREDIT_PAY_FAIL = \"CREDIT_PAY_FAIL\";","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { saveCredit } from \"../actions/CreditActions\";\nimport { closeModal, formatDate } from \"../helpers/popups\";\nimport { user_id } from '../helpers/userInfo';\nimport { FaWindowClose } from 'react-icons/fa';\n\n\nconst CreditForm = ()=> {\n    const [creditor, setCreditor] = useState('');\n    const [phone, setPhone] = useState('');\n    const [timeToPay, setTimeToPay] = useState('');\n    const [amount, setAmount] = useState('');\n    const dispatch = useDispatch();\n    \n\n    const submitCredit = (e) => {\n        e.preventDefault();    \n        const data = { creditor, phone, timeToPay:formatDate(timeToPay), amount, user_id };\n        dispatch(saveCredit(data));\n    };\n    return (\n    <div className=\"modal-bg\">\n        <div className=\"modal white-box\">\n\n            <div className=\"bg-primary p-1\">\n                <span onClick={closeModal} className=\"close\"><FaWindowClose /></span>\n                <h2 className=\"text-center\">Record Credits</h2>\n            </div>                    \n            <form className=\"container\" onSubmit={submitCredit}>\n                <ul className=\"form-container\">\n                <li>\n                    <label htmlFor=\"Creditor\">  Creditor </label>                          \n                    <input type=\"text\" name=\"creditor\" id=\"creditor\" onChange={(e)=> setCreditor(e.target.value)} required/>\n                </li>\n                <li>\n                    <label htmlFor=\"phone\">  Phone </label>                          \n                    <input type=\"phone\" name=\"phone\" id=\"phone\" onChange={(e)=> setPhone(e.target.value)} required/>\n                </li>\n                <li>\n                    <label htmlFor=\"amount\"> Amount </label>                          \n                    <input type=\"number\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                </li>\n                <li>\n                    <label htmlFor=\"timeToPay\"> Payment Date </label>                          \n                    <input type=\"date\" name=\"timeToPay\" id=\"timeToPay\" onChange={(e)=> setTimeToPay(e.target.value)} required/>\n                </li>                       \n                \n                <li>\n                    <button className=\"button bg-primary\" type=\"submit\">SAVE Credit</button>\n                </li>\n\n                </ul>\n            </form>\n        </div>\n    </div>\n    )\n}\nexport { CreditForm };","import { headers } from '../helpers/userInfo';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport * as route from '../serverRoutes/index';\nimport * as cc from \"../constants/CreditConstants\";\nimport { message } from '../helpers/popups';\n\n\nconst saveCredit = (creditData) =>async(dispatch)=> {\n\n    //dispatch({type: cc.CREDIT_SAVE_REQUEST, payload: creditData });\n    try {\n        const { data } = await axios.post(route.URL_INDEX+\"/credits\", creditData, {headers: headers});\n        const errors = Object.entries(data.message);\n        if(data.error === true){\n           return message(data, errors);\n        }else if(data.status === 400){\n            toast.warning(data.message);\n        }else{\n            dispatch({type: cc.CREDIT_SAVE_SUCCESS, payload: data});\n            toast.success(data.message);\n        }  \n       \n    } catch (error) {\n        dispatch({type: cc.CREDIT_SAVE_FAIL, payload: error.message }); \n        toast.error(\"message\", error.message);\n    }\n}\nconst listCredits = () => async(dispatch) =>{\n    dispatch({type: cc.CREDIT_LIST_REQUEST});\n    try {\n        const { data } = await axios.get(route.URL_INDEX+\"/credits\", {headers:headers});\n        dispatch({type:cc.CREDIT_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type:cc.CREDIT_LIST_REQUEST, payload: error.message});\n    }\n}\nconst saveCreditPayment = (paymentData) => async(dispatch) =>{\n      \n    dispatch({type: cc.CREDIT_PAY_REQUEST});\n    try {\n        const { data } = await axios.post(route.URL_INDEX+\"/pay/credit\", paymentData, {headers:headers});\n        dispatch({type:cc.CREDIT_PAY_SUCCESS, payload: data});\n        toast.success(data.message);\n    } catch (error) {\n        dispatch({type:cc.CREDIT_PAY_FAIL, payload: error.message});\n        toast.error(error.message);\n        console.log(error.message);\n    }\n}\n\nexport {saveCredit, listCredits, saveCreditPayment};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listCredits, saveCreditPayment } from '../actions/CreditActions';\n\nimport{openModal, closeModal, togglePayModal, formatDate, payedAmount, closePayModal} from '../helpers/popups';\n\nimport { CreditForm } from '../components/CreditForm';\nimport Pagination from '../components/Pagination';\nimport { Loading } from '../helpers/Loading';\n\nfunction CreditPage(props) {\n    \n    const [credit_id, setCreditId] = useState(0);\n    const [amoutToPay, setAmountToPay] = useState(1);\n\n    const [currentPage, setCurrentPage] =  useState(1);\n    const [creditsPerPage] = useState(10);\n\n    const allCredits = useSelector((state) => state.credits);\n    const { credits, creditsLoading } = allCredits;\n    const dispatch = useDispatch();\n    const getCreditId = (credit) => togglePayModal()? setCreditId(credit.id) : togglePayModal(); \n    \n    const handlerCreditPay = (e) => {\n        closePayModal();            \n            e.preventDefault();\n            const credit = {\n                credit_id: credit_id,\n                amount: amoutToPay\n            };\n            dispatch(saveCreditPayment(credit));\n        }\n        useEffect(()=>{\n            dispatch(listCredits());\n\n        }, []);\n        let count=0;\n\n        //pagingation \n        // const indexOfLastCredit = currentPage * creditsPerPage ;\n        // const indexOfFirstCredit = indexOfLastCredit - creditsPerPage;\n        // const currentCredit = credits.slice(indexOfFirstCredit, indexOfLastCredit);\n\n        // const paginate = pageNumber => setCurrentPage(pageNumber);\n        if(creditsLoading) {\n            return  <Loading />\n        }\n        \n    return (\n        <main>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Credits</li>          \n                <li onClick={openModal}>Add Credits</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container mr-3\">\n                <table className=\"f-w white-box\" id=\"example\">\n\n                    <tr>\n                        <th>No</th>\n                        <th>Creditor</th>\n                        <th>phone</th>\n                        <th>Amount</th>\n                        <th>Current Payment</th>\n                        <th>Remaining Days To pay</th>\n                        <th>Actions</th>\n                    </tr>\n                    <tbody>                      \n                    { credits && credits.length > 0 &&\n                        credits.map(credit => {\n                            return (\n                                <tr key={credit.id}>\n                                    <td> {++count} </td>\n                                    <td>{credit.creditor } </td>\n                                    <td>{credit.phone } </td>\n                                    <td>{credit.amount } </td>\n                                    <td> { payedAmount(credit.payedAmount)} </td>                                  \n                                    <td> { credit.remainingDays} </td>                                    \n                                    <td> <button className=\"button-sm\" onClick={ () => getCreditId(credit)}>Edit</button> </td>\n                            </tr> \n                            )\n                        })   \n                    }             \n                    </tbody>\n                </table>\n                {/* <Pagination \n                     creditsPerCredit ={ creditsPerPage }\n                     totalCredits = {credits.length} \n                     paginate={ paginate }\n                /> */}\n\n            </ul>\n            <CreditForm />\n            <div className=\"modal-sm\">\n            <div className=\"modal-content\">\n                   <form className=\"form-container white-box\" onSubmit={handlerCreditPay}>\n                       <ul className=\"form\">\n                           <li>\n                               <label>Amount</label>\n                               <input type=\"text\" name=\"amountToPay\" onChange={(e) => setAmountToPay(e.target.value)}/>\n                           </li>\n                           <li>\n                               <button className=\"btn-sm\" type=\"submit\">Pay</button>\n                           </li>\n                       </ul>\n                   </form>\n               </div>,\n            </div>\n        </main>    \n    )\n}\nexport default CreditPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { name } from '../helpers/userInfo';\nimport { VscSignIn, VscAccount } from \"react-icons/vsc\";\nimport { AiOutlineLogin } from \"react-icons/ai\";\nimport { toggleSidebar } from '../helpers/popups';\nconst Menu = () => {  \n    if(name !==null) {\n      return (\n          <>\n        <ul className=\"menu-item\">\n            <li> <Link to=\"credits\" class=\"menu\"> Credits </Link> </li>  \n            <li> <Link to=\"debits\" class=\"menu\"> Debits </Link>  </li>\n            <li> <Link to=\"expenses\" class=\"menu\"> Expense </Link>  </li> \n        </ul>\n        <ul className=\"menu-item\">\n            <li> <Link to=\"expenses\"> <VscAccount onClick={toggleSidebar} className=\"menu\"/> </Link> </li>\n        </ul>\n        </>\n      )\n    } else {\n        return (\n            <>\n            <ul className=\"menu-item\">                 \n                <li> <Link to=\"/register\" class=\"menu\"> Join</Link>   </li>\n            </ul>\n            <ul className=\"menu-item\"> {/** for signin */}\n            <li>\n                 <Link to=\"login\" class=\"menu\"> <AiOutlineLogin/> </Link>  {/** here for signout */}\n            </li>\n            </ul>\n            </>\n        )\n    }\n    \n}\nexport default Menu;","import React from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport HomePage from\"./screens/HomePage\";\nimport RegisterPage from \"./screens/RegisterPage\";\nimport LoginPage from \"./screens/LoginPage\";\nimport DebitPage from \"./screens/DebitPage\";\nimport ExpensePage from \"./screens/ExpensePage\";\n \nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport CreditPage from \"./screens/CreditPage\";\nimport Menu from \"./components/Menu\";\nimport {FaWindowClose } from 'react-icons/fa';\nimport { toggleSidebar } from './helpers/popups';\nimport { FixHeader } from \"./components/FixHeader\";\n\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport 'jquery/dist/jquery.min.js';\nimport $ from 'jquery';\n\ntoast.configure();\nFixHeader();\n\n$(document).ready(function () {\n  $('table').DataTable();\n});\nfunction App(props) {\n\n  const handleLogout = () => {\n    localStorage.clear('userInfo');\n    document.location.href= \"/homepage\";\n  }\n  return (\n    <BrowserRouter>\n        <div>\n              <div className=\"header f-w bg-primary\">\n                    <ul className=\"logo\">                \n                      <Link to=\"/homepage\" className=\"menu\">iManage</Link>                   \n                    </ul>                             \n                      <Menu />                                 \n              </div>             \n              <aside className=\"sidebar\">                  \n                  <FaWindowClose onClick={toggleSidebar} size={32}/>  \n                  <ul className=\"menu-item\">\n                    <li className=\"menu\" onClick={handleLogout}> logout</li>\n                  </ul>                \n              </aside>\n              \n              <footer className=\"footer bg-primary\">\n                  Developed By <a href=\"janvierdev.netlify.app\"> \t&#169; Janvier</a>\n              </footer>\n          </div>        \n            <Route path=\"/homepage\" component={HomePage} exact=\"true\"/>\n            <Route path=\"/register\" component={RegisterPage} />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/debits\" component={DebitPage} />\n            <Route path=\"/credits\" component={CreditPage} />\n            <Route path=\"/expenses\" component={ExpensePage} />\n              \n    </BrowserRouter>   \n  );\n}\n\nexport default App;\n","export const FixHeader = () => {\n    document.addEventListener(\"DOMContentLoaded\", function(){\n        window.scroll(()=> window.scrollTop > 0 ? document.querySelector().classList.add(\"fix-header\"): document.querySelector().classList.remove(\"fix-header\"));\n    });\n\n}\n    ","\nimport * as ec from '../constants/ExpenseConstants';\n\nconst initialExpenses = { expenses: [], loading:false, error:null, expenseLoading: false, expensesError: null};\n\nexport default (state = initialExpenses, action) => {\n    switch(action.type) {\n        case ec.FECTCH_EXPENSES_REQUEST :\n            return {loading: true, expenses: [] };\n        case ec.FECTCH_EXPENSES_SUCCESS :\n            return {loading: false, expenses: action.payload};\n\n        case ec.FECTCH_EXPENSES_FAIL:\n            return {loading: false, error: action.payload};\n\n        case ec.EXPENSE_SUCCESS_REQUEST :\n            console.log(\"data from reducer\", action.payload);\n              \n            return { expenseLoading: false, expenses: [...state.expenses, action.payload] }; \n            \n        case ec.EXPENSE_FAIL_REQUEST :\n            \n            return {expenseLoading: false, expensesError: action.payload };\n        default: \n            return state; \n    }\n}\n","import * as dc from '../constants/DebitConstants';\nconst debitInitState = { debits: [], isLoading:false, error:null,\n     debitsLoading: false, debitsError: null, isPayLoading: false, payError: null};\n\nexport default (state = debitInitState, action) => {\n    switch(action.type) { \n        // case dc.DEBIT_SAVE_REQUEST:            \n        //     return {isLoading:true};\n        case dc.DEBIT_SAVE_SUCCESS:            \n            return {isLoading: false, debits: [...state.debits, action.payload.debit]};\n        case dc.DEBIT_SAVE_FAIL:\n            return {isLoading: false, error: action.payload};\n        \n        case dc.DEBITS_LIST_REQUEST :\n            return {debitsLoading: true, debits: []};\n        case dc.DEBITS_LIST_SUCCESS:\n            return {debitsLoading: false, debits: action.payload};\n        case dc.DEBITS_LIST_FAIL:\n            return {debitsLoading: false, debitsError: action.payload};\n\n        case dc.DEBIT_PAY_REQUEST :\n            return {isPayLoading: true, debits: []};\n        case dc.DEBIT_PAY_SUCCESS:\n            return {isPayLoading: false, debits: action.payload};\n        case dc.DEBIT_PAY_FAIL:\n            return {isPayLoading: false, payError: action.payload};    \n        default:\n            return state;\n\n    }\n\n}","import * as cc from '../constants/CreditConstants';\nconst creditInitState = { credits: [], isLoading:false, error:null,\n    creditsLoading: false, creditsError: null, isPayLoading: false, payError: null};\n\nexport default (state = creditInitState, action) => {\n    switch(action.type) {\n        // case cc.DEBIT_SAVE_REQUEST:            \n        //     return {isLoading:true};\n        case cc.CREDIT_SAVE_SUCCESS:           \n            return {isLoading: false, credits: [...state.credits, action.payload.Credit]};\n            \n        case cc.CREDIT_SAVE_FAIL:            \n            return {isLoading: false, error: action.payload};\n        \n        case cc.CREDIT_LIST_REQUEST :\n            return {creditsLoading: true, credits: []};\n\n        case cc.CREDIT_LIST_SUCCESS:            \n            return {creditsLoading: false, credits: action.payload};\n\n        case cc.CREDIT_LIST_FAIL:\n            return {creditsLoading: false, creditsError: action.payload.message};\n\n        case cc.CREDIT_PAY_REQUEST :\n            return {isPayLoading: true, credits: []};\n\n        case cc.CREDIT_PAY_SUCCESS:            \n            return {isPayLoading: false, credits: [...state.credits, action.payload]}; /** state credits does not reload */\n\n        case cc.CREDIT_PAY_FAIL:\n            return {isPayLoading: false, payError: action.payload};    \n\n        default:\n            return state;\n\n    }\n\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { userRegister, userLogin } from './reducers/UserReducer';\nimport expenses from './reducers/ExpenseReducers';\nimport debits from './reducers/DebitReducer';\nimport credits from './reducers/CreditReducer';\n\n//const userInfo = JSON.parse(localStorage.getItem('user'));\nconst initialState = { };\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducer = combineReducers({\n    userRegister,\n    userLogin,\n    expenses,\n    debits,\n    credits\n});\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","import * as uc from \"../constants/UserConstants\";\nconst userRegister = (state = {}, action) => {\n    switch(action.type) {\n        case uc.USER_REGISTER_REQUEST :\n            return {loading: true}\n        case uc.USER_REGISTER_SUCCESS:\n            return {loading:false, userInfo: action.payload};\n        case uc.USER_REGISTER_FAIL:\n            return {loading:false, error: action.payload};  \n        default:\n            return state;  \n    }\n} \nconst userLogin = (state = {}, action)=> {\n    switch(action.type) {\n        case uc.USER_LOGIN_REQUEST:\n            return {isLoading: true };\n        case uc.USER_LOGIN_SUCCESS:\n            return {isLoading:false, userInfo: action.payload};\n        case uc.USER_LOGIN_FAIL:\n            return {isLoading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport { userRegister , userLogin};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n    <Provider store={store}>\n       <App />    \n    </Provider>,\n  document.getElementById('root')\n);\n// serviceWorker.unRegister();\n\n\n"],"sourceRoot":""}
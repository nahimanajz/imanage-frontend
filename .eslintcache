[{"/Volumes/D/Coding/imanage-react-app/src/screens/HomePage.js":"1","/Volumes/D/Coding/imanage-react-app/src/screens/CreditPage.js":"2","/Volumes/D/Coding/imanage-react-app/src/components/CreditForm.js":"3","/Volumes/D/Coding/imanage-react-app/src/components/Pagination.js":"4","/Volumes/D/Coding/imanage-react-app/src/App.js":"5","/Volumes/D/Coding/imanage-react-app/src/screens/ExpensePage.js":"6","/Volumes/D/Coding/imanage-react-app/src/screens/LoginPage.js":"7","/Volumes/D/Coding/imanage-react-app/src/screens/DebitPage.js":"8","/Volumes/D/Coding/imanage-react-app/src/screens/RegisterPage.js":"9","/Volumes/D/Coding/imanage-react-app/src/helpers/userInfo.js":"10","/Volumes/D/Coding/imanage-react-app/src/components/Menu.js":"11","/Volumes/D/Coding/imanage-react-app/src/serverRoutes/index.js":"12","/Volumes/D/Coding/imanage-react-app/src/reducers/CreditReducer.js":"13","/Volumes/D/Coding/imanage-react-app/src/actions/CreditActions.js":"14","/Volumes/D/Coding/imanage-react-app/src/helpers/popups.js":"15","/Volumes/D/Coding/imanage-react-app/src/actions/DebitActions.js":"16","/Volumes/D/Coding/imanage-react-app/src/actions/ExpenseActions.js":"17","/Volumes/D/Coding/imanage-react-app/src/reducers/DebitReducer.js":"18","/Volumes/D/Coding/imanage-react-app/src/helpers/popover.js":"19","/Volumes/D/Coding/imanage-react-app/src/actions/UserActions.js":"20"},{"size":2359,"mtime":1611338205325,"results":"21","hashOfConfig":"22"},{"size":4298,"mtime":1611426802416,"results":"23","hashOfConfig":"22"},{"size":2483,"mtime":1611445969547,"results":"24","hashOfConfig":"22"},{"size":669,"mtime":1611256921758,"results":"25","hashOfConfig":"22"},{"size":2266,"mtime":1611450655351,"results":"26","hashOfConfig":"22"},{"size":4134,"mtime":1611445925408,"results":"27","hashOfConfig":"22"},{"size":1994,"mtime":1610978715221,"results":"28","hashOfConfig":"22"},{"size":6409,"mtime":1611445826665,"results":"29","hashOfConfig":"22"},{"size":3881,"mtime":1610977558212,"results":"30","hashOfConfig":"22"},{"size":293,"mtime":1611330272518,"results":"31","hashOfConfig":"22"},{"size":781,"mtime":1611450458179,"results":"32","hashOfConfig":"22"},{"size":251,"mtime":1610824575690,"results":"33","hashOfConfig":"22"},{"size":1262,"mtime":1611158222769,"results":"34","hashOfConfig":"22"},{"size":1610,"mtime":1611158784259,"results":"35","hashOfConfig":"22"},{"size":862,"mtime":1611141281211,"results":"36","hashOfConfig":"22"},{"size":1595,"mtime":1611154051202,"results":"37","hashOfConfig":"22"},{"size":1244,"mtime":1611088560840,"results":"38","hashOfConfig":"22"},{"size":1243,"mtime":1611149983752,"results":"39","hashOfConfig":"22"},{"size":736,"mtime":1611436107313,"results":"40","hashOfConfig":"22"},{"size":1411,"mtime":1610997005711,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"lx8wyt",{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"45"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/D/Coding/imanage-react-app/src/screens/HomePage.js",["96"],"import { userInfo } from \"../helpers/userInfo\";\n\nfunction HomePage(){\n  \n    return (<div className=\"main\">\n                <div className=\"home-image\">\n                    <div className=\"content\">\n                        <h2>iManage helps you to:</h2>\n                        <ol>\n                            <li>Record Your expenses</li>\n                            <li>Manage Your personal loans </li>\n                            <li>Know Your debits and Credits</li>\n                        </ol>                      \n                    </div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" className=\"wave f-w\">\n                        <path fill=\"#f3f4f5\" fill-opacity=\"1\" d=\"M0,160L60,170.7C120,181,240,203,360,181.3C480,160,600,96,720,74.7C840,53,960,75,1080,96C1200,117,1320,139,1380,149.3L1440,160L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"></path>\n                    </svg>             \n                </div>\n                <div className=\"main\">\n                    <h1 className=\"title-1 text-center mt-5\">Why imanage</h1>\n                    <div className=\"three-col\">\n                        <div className=\"box animate\">\n                            <h2 className=\"title text-center\">Expenses</h2>\n                            <p> Sometimes it's really confusing to know How you used your money</p>\n                            <p>But it should no longer be a problem, iManage helps you to Calculate those expenditure</p>\n                        </div>\n                        <div className=\"box\">\n                        <h2 className=\"title text-center\">Debits</h2>\n                            <p>Calculate money you owe your friends and time to pay them before you look bad among them </p>\n                        </div>\n                        <div className=\"box\">\n                             <h2 className=\"title text-center\">Credits</h2>\n                             <p> Did anybody ask you to pay him then you don't recognize when ? and how much he gave you ?</p>\n                             <p> Use imanage to say Good bye to the confusions like those</p>\n                        </div>\n                    </div>\n                </div>                  \n            </div>    \n    )\n}\nexport default HomePage;",["97","98"],"/Volumes/D/Coding/imanage-react-app/src/screens/CreditPage.js",["99","100","101"],"import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listCredits, saveCreditPayment } from '../actions/CreditActions';\n\nimport{openModal, closeModal, openPayModal, formatDate, payedAmount} from '../helpers/popups';\nimport { CreditForm } from '../components/CreditForm';\nimport Pagination from '../components/Pagination';\n\nfunction CreditPage(props) {\n    \n    const [credit_id, setCreditId] = useState(0);\n    const [amoutToPay, setAmountToPay] = useState(1);\n\n    const [currentPage, setCurrentPage] =  useState(1);\n    const [creditsPerPage] = useState(1);\n\n    const allCredits = useSelector((state) => state.credits);\n    const { credits } = allCredits;\n    const dispatch = useDispatch();\n    const getCreditId = (credit) => openPayModal()? setCreditId(credit.id) : openPayModal(); \n    \n    const handlerCreditPay = (e) => {\n            e.preventDefault();\n            const credit = {\n                credit_id: credit_id,\n                amount: amoutToPay\n            };\n            dispatch(saveCreditPayment(credit));\n        }\n        useEffect(()=>{\n            dispatch(listCredits());\n\n        }, []);\n        let count=0;\n\n        //pagingation \n        const indexOfLastCredit = currentPage * creditsPerPage ;\n        const indexOfFirstCredit = indexOfLastCredit - creditsPerPage;\n        const currentCredit = credits.slice(indexOfFirstCredit, indexOfLastCredit);\n\n        const paginate = pageNumber => setCurrentPage(pageNumber);\n        \n    return (\n        <main>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Credits</li>          \n                <li onClick={openModal}>Add Credits</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container mr-3\">\n                <table className=\"f-w white-box\">\n                    <tr>\n                        <th>No</th>\n                        <th>Creditor</th>\n                        <th>phone</th>\n                        <th>Amount</th>\n                        <th>Current Payment</th>\n                        <th>Remaining Days To pay</th>\n                        <th>Actions</th>\n                    </tr>\n                    <tbody>                      \n                    { credits && credits.length > 0 &&\n                        currentCredit.map(credit => {\n                            return (\n                                <tr key={credit.id}>\n                                    <td> {++count} </td>\n                                    <td>{credit.creditor } </td>\n                                    <td>{credit.phone } </td>\n                                    <td>{credit.amount } </td>\n                                    <td> { payedAmount(credit.payedAmount)} </td>                                  \n                                    <td> { credit.remainingDays} </td>                                    \n                                    <td> <button className=\"button-sm\" onClick={ () => getCreditId(credit)}>Edit</button> </td>\n                            </tr> \n                            )\n                        })   \n                    }             \n                    </tbody>\n                </table>\n                <Pagination \n                     creditsPerCredit ={ creditsPerPage }\n                     totalCredits = {credits.length} \n                     paginate={ paginate }\n                />\n\n            </ul>\n            <CreditForm />\n            <div className=\"modal-sm\">\n            <div className=\"modal-content\">\n                   <form className=\"form-container white-box\" onSubmit={handlerCreditPay}>\n                       <ul className=\"form\">\n                           <li>\n                               <label>Amount</label>\n                               <input type=\"text\" name=\"amountToPay\" onChange={(e) => setAmountToPay(e.target.value)}/>\n                           </li>\n                           <li>\n                               <button className=\"btn-sm\" type=\"submit\">Pay</button>\n                           </li>\n                       </ul>\n                   </form>\n               </div>,\n            </div>\n        </main>    \n    )\n}\nexport default CreditPage;","/Volumes/D/Coding/imanage-react-app/src/components/CreditForm.js",[],"/Volumes/D/Coding/imanage-react-app/src/components/Pagination.js",["102"],"import React from 'react';\n\nconst Pagination = ({creditsPerCredit, totalCredits, paginate}) => {\n    const pageNumbers = [];\n    for (let i = 0; i < Math.ceil(totalCredits /  creditsPerCredit); i++) {\n        pageNumbers.push(i);\n    }\n    return (        \n        <div className=\"f-w\"> {\n               pageNumbers.map(number =>(\n                   <li key={ number } className=\"page-item p-1\"> \n                   <a onClick={ () => paginate(number) } className=\"page-links\">\n                       { ++number }\n                       \n                   </a>\n                   </li>\n               ))\n            }\n        </div>\n    )\n\n}\nexport default Pagination;","/Volumes/D/Coding/imanage-react-app/src/App.js",["103"],"/Volumes/D/Coding/imanage-react-app/src/screens/ExpensePage.js",["104","105","106"],"import { useEffect, useState } from \"react\";\nimport{openModal, closeModal} from '../helpers/popups';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {saveExpense, getExpenses} from '../actions/ExpenseActions';\nimport { headers, userInfo, user_id } from \"../helpers/userInfo\";\nimport moment from \"moment\";\nimport { FaWindowClose } from 'react-icons/fa';\n\n\nfunction ExpensePage(props) {\n    const [amount, setAmount] = useState('');\n    const [category, setCategory] = useState('');\n\n    const allExpenses = useSelector(state => state.expenses);\n    const {loading, error, expenses, expenseLoading, expensesError } = allExpenses;\n   \n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n     e.preventDefault();     \n     dispatch(saveExpense(amount, category, user_id));\n    }\n    useEffect(()=>  {      \n        dispatch(getExpenses());\n    } , []);\n    console.log(allExpenses);\n    let count = 0;\n    return (\n        <main>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Expenditures</li>          \n                <li onClick={openModal}>Add expenditure</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container\">\n                {loading && <div>Still loading</div>}\n                {error && <div>{error}</div> }               \n                  \n                    <table className=\"f-w white-box mr-3 purple\">\n                    <tr>\n                        <th>No</th>\n                        <th>Date</th>\n                        <th>Category</th>\n                        <th>Amount</th>\n                    </tr>\n                               \n                    <tbody>\n                       {  expenses && expenses.length > 0 &&                 \n                          expenses.map(expense => {\n                          return (\n                            <tr key={expense.id}>\n                                <td> {++count} </td>\n                                <td>{moment(expense.date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\") || expense.created_At } </td>\n                                <td>{expense.category}  </td>\n                                <td>{expense.amount}  </td>\n                                \n                           </tr>   \n                          )  \n                         })  \n                        }                        \n                    </tbody>\n                </table>\n              \n               \n            </ul>\n            <div className=\"modal-bg\">\n                <div className=\"modal white-box\">\n\n                    <div className=\"bg-primary p-1\">\n                        <span onClick={closeModal} className=\"close\"> <FaWindowClose /></span>\n                        <h2 className=\"text-center\">Record Expense</h2>\n                    </div>                   \n                    {expenseLoading && <div className=\"warning\">expenseLoading</div>}\n                    {expensesError && <div className=\"warning\"> {expensesError}</div>}             \n                    <form className=\"container\" onSubmit={handleSubmit}>\n                        <ul className=\"form-container\">\n                        <li>\n                            <label htmlFor=\"amount\"> Amount </label>                          \n                            <input type=\"text\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                        </li>\n                        \n                        <li>\n                            <label htmlFor=\"category\">  Category </label>                          \n                            <input type=\"text\" name=\"category\" id=\"category\" onChange={(e)=> setCategory(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <button type=\"submit\" className=\"button bg-primary\">SAVE</button>\n                        </li>\n\n                        </ul>\n                    </form>\n                </div>\n            </div>\n           \n        </main>    \n    )\n}\nexport default ExpensePage;","/Volumes/D/Coding/imanage-react-app/src/screens/LoginPage.js",["107","108","109","110"],"import React, { useEffect, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { login } from \"../actions/UserActions\";\n\nfunction LoginPage(props){\n    const [email, setEmail ] =  useState('');\n    const [password, setPassword ] = useState('');\n    \n    const redirect = props.location.search? props.location.search.split[\"=\"][1]:'/expenses';\n    const dispatch = useDispatch();\n    \n    const submitHandler = (e)=> {\n        e.preventDefault();\n        dispatch(login(email, password));\n    } \n  \n    return ( \n        <main>\n            <div className=\"aside\">            \n                <img src=\"../images/loginImage.jpg\" alt=\"login image\" className=\"img64x64\"/>             \n            </div>\n            <form onSubmit={submitHandler} className=\"container\">\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Login</h2>\n                </li>\n                <li>                        \n                {/* { error && <div> { error } </div> } */}\n                \n                </li>\n                <li>\n                    <label htmlFor=\"email\">  Email </label>                          \n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e)=> setEmail(e.target.value)} />\n                </li>\n                <li>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e)=>setPassword(e.target.value)} />\n                </li>\n                <li>\n                    <button className=\"button primary\" type=\"submit\"> Sign in</button>\n                </li>\n                <li> New to iManage? </li>\n                <li>\n                    <Link to='/register'>\n                        Signup\n                    </Link>\n                </li>\n            </ul>\n        </form>\n        </main>\n           \n            \n    )\n}\nexport default LoginPage;",["111","112"],"/Volumes/D/Coding/imanage-react-app/src/screens/DebitPage.js",["113"],"import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listDebits, saveDebit, saveDebitPayment } from '../actions/DebitActions';\nimport {user_id} from \"../helpers/userInfo\"\nimport{openModal, closeModal, openPayModal, formatDate, payedAmount} from '../helpers/popups';\nimport { Loading } from '../helpers/popover';\nimport { FaWindowClose } from 'react-icons/fa';\n\n\nfunction DebitPage(props) {\n    const [debitor, setDebitor] = useState('');\n    const [phone, setPhone] = useState('');\n    const [timeToPay, setTimeToPay] = useState('');\n    const [amount, setAmount] = useState('');\n    const [amoutToPay, setAmountToPay] = useState('');\n    const [debitId, setDebitId] = useState(0);\n\n    const debitsList = useSelector((state)=>state.debits);\n    const { debits, isLoading, error, debitsLoading, debitsError } = debitsList;\n    const dispatch = useDispatch();\n\n    const eventHandler = (e) => {\n        e.preventDefault();    \n        const data = { debitor, phone, timeToPay:formatDate(timeToPay), amount, user_id };\n        dispatch(saveDebit(data));\n    };\n    const getDebitId = (debit) => openPayModal()? setDebitId(debit.id) : openPayModal(); \n \n    const handlerDebitPay = (e) => {\n        e.preventDefault();\n        const debit = {\n            debit_id: debitId,\n            amount: amoutToPay\n        };\n        dispatch(saveDebitPayment(debit));\n    }\n    useEffect(()=>{\n        dispatch(listDebits());\n\n    }, []);\n\n    let count = 0;\n    return (\n        <main>\n            <ul className=\"aside sidemenu white-box\">\n                <li> Debits</li>          \n                <li onClick={openModal}>Add debits</li>            \n                {/* <li> New expense category</li>             */}                \n            </ul>\n            <ul className=\"container\">               \n                \n                {debitsError && <div>{debitsError}</div>}\n                <table className=\"f-w white-box mr-3\">\n                    <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Debitor</th>\n                            <th>phone</th>\n                            <th>Amount</th>\n                            <th>Current Payment</th>\n                            <th>Remaining Days To pay</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {debitsLoading && <Loading />}\n                    { debits && debits.length > 0 &&\n                        debits.map(debit => {\n                            return (\n                                <tr key={debit.id}>\n                                    <td>{++count}</td>\n                                    <td>{debit.debitor }</td>\n                                    <td>{debit.phone } </td>\n                                    <td>{debit.amount } </td>\n                                    <td> { payedAmount(debit.payedAmount)}</td>                                  \n                                    <td> { debit.remainingDays}</td>                                    \n                                    <td><button className=\"button-sm\" onClick={ () => getDebitId(debit)}>Edit</button></td>\n                            </tr> \n                            )\n                        })\n                    }\n                                            \n                    </tbody>\n                </table>\n            </ul>\n            <div className=\"modal-bg\">\n                <div className=\"modal white-box\">\n\n                    <div className=\"bg-primary p-1\">\n                        <span onClick={closeModal} className=\"close\"><FaWindowClose /></span>\n                        <h2 className=\"text-center\">Record A Debit</h2>\n                    </div>         \n                    <div>\n                        {isLoading && <div>Loading ...</div>}\n                    {error && <div> {error}</div>}\n                       \n                    </div>           \n                    <form className=\"container\" onSubmit={eventHandler}>\n                        <ul className=\"form-container\">\n                        <li>\n                            <label htmlFor=\"debitor\">  Debitor </label>                          \n                            <input type=\"text\" name=\"debitor\" id=\"debitor\" onChange={(e)=> setDebitor(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"phone\">  Phone </label>                          \n                            <input type=\"phone\" name=\"phone\" id=\"phone\" onChange={(e)=> setPhone(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"amount\"> Amount </label>                          \n                            <input type=\"number\" name=\"amount\" id=\"amount\" onChange={(e)=> setAmount(e.target.value)} required/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"timeToPay\"> Payment Date </label>                          \n                            <input type=\"datetime-local\" name=\"timeToPay\" id=\"timeToPay\" onChange={(e)=> setTimeToPay(e.target.value)} required/>\n                        </li>                       \n                        \n                        <li>\n                            <button className=\"button bg-primary\" type=\"submit\">SAVE Debit</button>\n                        </li>\n\n                        </ul>\n                    </form>\n                </div>\n            </div>\n            <div className=\"modal-sm\">\n            {/* <div className=\"modal-content\"> */}\n                   <form className=\"form-container white-box\" onSubmit={handlerDebitPay}>\n                       <ul className=\"form\">\n                           <li>\n                               <label>Amount</label>\n                               <input type=\"text\" name=\"AmountToPay\" onChange={ (e) => setAmountToPay(e.target.value)} />\n                           </li>\n                           <li>\n                               <button className=\"btn-sm\">Pay</button>\n                           </li>\n                       </ul>\n                   </form>\n               {/* </div> */}\n            </div> \n        </main>    \n    )\n}\nexport default DebitPage;","/Volumes/D/Coding/imanage-react-app/src/screens/RegisterPage.js",["114"],"import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  Link} from \"react-router-dom\";\nimport { register } from \"../actions/UserActions\";\n\nfunction RegisterPage(props){\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [balance, setBalance] = useState('');\n    const[phone, setPhone] = useState('');\n    const [password, setPassword] = useState('');\n    const [password_confirmation, setPassword_confirmation] = useState('');\n    //const [message, setMessage] = useState('');\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, userInfo, error } = userRegister;\n    const dispatch = useDispatch();\n   const redirect = props.location.search ? props.location.search.split(\"=\")[1]:'/register';\n    useEffect(()=> {\n        if(userInfo) {            \n           props.history.push(redirect);\n\n        }\n \n    },[userInfo]) //if user state info change then useEffect() will executes it's code\n    const submitHandler = (e) => {\n        e.preventDefault();\n       dispatch(register(name, email, phone, balance, password, password_confirmation));\n    } \n    return ( \n        <main>\n            <ul className=\"aside\">                \n                <li>use imanage to record your expenses</li>\n                <li>use loans</li>\n                <li>use imanage to record your expenses</li>\n            </ul>            \n            <form onSubmit={submitHandler} className=\"container\">\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Create Account</h2>\n                    </li>\n                    <li>{ loading && <div>Please wait ...</div>}             \n                        { error && <div>{ error } </div> }\n                        \n                    </li>\n                    <li>\n                        <label htmlFor=\"name\">  name </label>                          \n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={(e)=> setName(e.target.value)}/>\n                    </li>\n                    <li>\n                        <label htmlFor=\"email\">  Email </label>                          \n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={(e)=> setEmail(e.target.value)} />\n                    </li>\n                    <li>\n                        <label htmlFor=\"phone\">  Phone </label>                          \n                        <input type=\"text\" name=\"phone\" id=\"phone\" onChange={(e)=> setPhone(e.target.value)} />\n                    </li>\n                    <li>\n                        <label htmlFor=\"phone\">  Balance </label>                          \n                        <input type=\"text\" name=\"balance\" id=\"balance\" onChange={(e)=> setBalance(e.target.value)} />\n                    </li>\n                    <li>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={(e)=> setPassword(e.target.value)}/>\n                    </li>\n                    <li>\n                        <label htmlFor=\"rePassword\">confirm Password</label>\n                        <input type=\"password\" name=\"password_confirmation\" id=\"password_confirmation\" onChange={(e)=> setPassword_confirmation(e.target.value)}/>\n                    </li>\n                    <li>\n                        <button className=\"button primary\" type=\"submit\"> Register</button>\n                    </li>\n                    <li> Already has an Account ?\n                        <Link to='/login'>\n                           Sign in\n                        </Link>\n\n                    </li>\n                    \n                </ul>\n            </form>\n      \n        </main>\n        \n   \n        \n    )\n} \nexport default RegisterPage;",["115","116"],"/Volumes/D/Coding/imanage-react-app/src/helpers/userInfo.js",[],["117","118"],"/Volumes/D/Coding/imanage-react-app/src/components/Menu.js",[],"/Volumes/D/Coding/imanage-react-app/src/serverRoutes/index.js",[],"/Volumes/D/Coding/imanage-react-app/src/reducers/CreditReducer.js",["119"],"/Volumes/D/Coding/imanage-react-app/src/actions/CreditActions.js",[],["120","121"],"/Volumes/D/Coding/imanage-react-app/src/helpers/popups.js",["122"],"import {toast} from 'react-toastify';\nimport moment from 'moment';\n\nconst openModal = () => document.querySelector('.modal-bg').classList.add(\"open\");\nconst closeModal = () => document.querySelector('.modal-bg').classList.remove(\"open\");\nconst openPayModal = () => document.querySelector('.modal-sm').classList.toggle(\"active\");\n\nconst message = (data, errors)=> {\n    if (errors.length >0) {           \n        errors.forEach(error => {\n       return toast.warning(error[1]);            \n        });   \n    }else if(errors.length === 0) {\n        toast.success(data.message);\n    }   \n}\nconst formatDate =(date)=> moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\nconst payedAmount =(amount)=>  amount ===0 ? \"No payment\": amount;\n\nconst recordPayment =(paymentType, id, amount) => {\n\n}\n\nexport {openModal, closeModal, openPayModal, message, formatDate, payedAmount};","/Volumes/D/Coding/imanage-react-app/src/actions/DebitActions.js",[],"/Volumes/D/Coding/imanage-react-app/src/actions/ExpenseActions.js",["123"],"import axios from 'axios';\nimport * as route from '../serverRoutes/index';\nimport * as ec from '../constants/ExpenseConstants';\nimport { headers, user_id} from '../helpers/userInfo';\nimport { toast } from 'react-toastify';\n\nconst saveExpense = (amount,  category, user_id ) => async(dispatch) => {\ndispatch({type: ec.EXPENSE_REGISTER_REQUEST, payload:{ amount,  category, user_id}});\ntry {\n    const { data } = await axios.post(route.URL_INDEX+\"/expenses\", {amount, category, user_id}, { headers: headers});\n   \n    dispatch({type: ec.EXPENSE_SUCCESS_REQUEST, payload: data.expense});\n   \n    console.log(JSON.stringify(data.message));\n    toast.error(data.message);\n} catch (error) {\n    console.error(error);\n    dispatch({type: ec.EXPENSE_FAIL_REQUEST, payload: error.message});\n    toast.error(error.message);\n}\n}\nconst getExpenses = () => async (dispatch) => {\n    dispatch({type: ec.FECTCH_EXPENSES_REQUEST});\n    try {\n        const { data } = await axios.get(route.URL_INDEX+\"/expenses\", { headers: headers });   \n        dispatch({type:ec.FECTCH_EXPENSES_SUCCESS, payload: data});      \n        \n    } catch (error) {\n        dispatch({type: ec.FECTCH_EXPENSES_FAIL, payload: error.message});\n    }\n}\nexport {saveExpense, getExpenses};","/Volumes/D/Coding/imanage-react-app/src/reducers/DebitReducer.js",["124"],"/Volumes/D/Coding/imanage-react-app/src/helpers/popover.js",["125"],"/Volumes/D/Coding/imanage-react-app/src/actions/UserActions.js",[],{"ruleId":"126","severity":1,"message":"127","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":18},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"126","severity":1,"message":"134","line":5,"column":19,"nodeType":"128","messageId":"129","endLine":5,"endColumn":29},{"ruleId":"126","severity":1,"message":"135","line":5,"column":45,"nodeType":"128","messageId":"129","endLine":5,"endColumn":55},{"ruleId":"136","severity":1,"message":"137","line":33,"column":12,"nodeType":"138","endLine":33,"endColumn":14,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":12,"column":20,"nodeType":"142","endLine":12,"endColumn":81},{"ruleId":null,"fatal":true,"severity":2,"message":"143","line":38,"column":26},{"ruleId":"126","severity":1,"message":"144","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":5,"column":19,"nodeType":"128","messageId":"129","endLine":5,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":25,"column":9,"nodeType":"138","endLine":25,"endColumn":11,"suggestions":"145"},{"ruleId":"126","severity":1,"message":"146","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"147","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":21},{"ruleId":"126","severity":1,"message":"148","line":10,"column":11,"nodeType":"128","messageId":"129","endLine":10,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":21,"column":17,"nodeType":"142","endLine":21,"endColumn":93},{"ruleId":"130","replacedBy":"151"},{"ruleId":"132","replacedBy":"152"},{"ruleId":"136","severity":1,"message":"137","line":40,"column":8,"nodeType":"138","endLine":40,"endColumn":10,"suggestions":"153"},{"ruleId":"136","severity":1,"message":"154","line":25,"column":7,"nodeType":"138","endLine":25,"endColumn":17,"suggestions":"155"},{"ruleId":"130","replacedBy":"156"},{"ruleId":"132","replacedBy":"157"},{"ruleId":"130","replacedBy":"158"},{"ruleId":"132","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":5,"column":1,"nodeType":"162","endLine":32,"endColumn":2},{"ruleId":"130","replacedBy":"163"},{"ruleId":"132","replacedBy":"164"},{"ruleId":"126","severity":1,"message":"165","line":20,"column":7,"nodeType":"128","messageId":"129","endLine":20,"endColumn":20},{"ruleId":"126","severity":1,"message":"166","line":4,"column":19,"nodeType":"128","messageId":"129","endLine":4,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":5,"column":1,"nodeType":"162","endLine":32,"endColumn":2},{"ruleId":"126","severity":1,"message":"167","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},"no-unused-vars","'userInfo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'closeModal' is defined but never used.","'formatDate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["170"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unterminated template\n\n  36 |                        <Menu />                                  \n  37 |                     <ul className=\"menu-item\">\n> 38 |                        {`userInfo()['user'].balance && <FaUserCircle onClick={openSidebar}/> }\n     |                          ^\n  39 |                       \n  40 |                     </ul>  \n  41 |               </div>","'headers' is defined but never used.",["171"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'redirect' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["168"],["169"],["172"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["173"],["168"],["169"],["168"],["169"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["168"],["169"],"'recordPayment' is assigned a value but never used.","'user_id' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"174","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [dispatch]",{"range":"180","text":"181"},{"range":"182","text":"181"},{"range":"183","text":"181"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"184","text":"185"},[1169,1171],"[dispatch]",[878,880],[1479,1481],[950,960],"[props.history, redirect, userInfo]"]